{
(* A_{mu} *)
tidl[{{_,_}},{},_] :> 0
,
(* A_{mu,nu} *)
tidl[{{q_,mu_},{q_,nu_}},{},n_] :>
		ChangeDimension[ExpandScalarProduct[(MT[mu, nu] SP[q, q])/n],n]
,
(* A_{mu,nu,rho} *)
tidl[{{q_,_},{q_,_},{q_,_}},{},_] :> 0
,
(* A_{mu,nu,rho,sigma} *)
tidl[{{q_,mu_},{q_,nu_},{q_,rho_},{q_,si_}},{},n_] :>
		ChangeDimension[ExpandScalarProduct[((MT[mu, si] MT[nu, rho] +
		MT[mu,rho]MT[nu,si]+MT[mu,nu]MT[rho,si])SP[q, q]^2)/(n(2 + n))],n]
,
(* A_{mu,nu,rho,sigma,tau} *)
tidl[{{q_,_},{q_,_},{q_,_},{q_,_},{q_,_}},{},_] :> 0
,
(* A_{mu,nu,rho,sigma,tau,kappa} *)
tidl[{{q_,mu_},{q_,nu_},{q_,rho_},{q_,sigma_},{q_,tau_},{q_,ka_}},{},n_] :>
Block[{s1,s2,s3,encli},
		encli=
		{(s3*SP[q,q]^3)/(n*s1*s2),{s1->2+n,s2->4+n,
		s3->MT[ka,tau]*MT[mu,sigma]*MT[nu,rho]+MT[ka,sigma]*MT[mu,tau]*
		MT[nu,rho]+MT[ka,tau]*MT[mu,rho]*MT[nu,sigma]+
		MT[ka,rho]*MT[mu,tau]*MT[nu,sigma]+MT[ka,sigma]*MT[mu,rho]*
		MT[nu,tau]+MT[ka,rho]*MT[mu,sigma]*MT[nu,tau]+
		MT[ka,tau]*MT[mu,nu]*MT[rho,sigma]+MT[ka,nu]*MT[mu,tau]*
		MT[rho,sigma]+MT[ka,mu]*MT[nu,tau]*MT[rho,sigma]+
		MT[ka,sigma]*MT[mu,nu]*MT[rho,tau]+MT[ka,nu]*MT[mu,sigma]*
		MT[rho,tau]+MT[ka,mu]*MT[nu,sigma]*MT[rho,tau]+
		MT[ka,rho]*MT[mu,nu]*MT[sigma,tau]+MT[ka,nu]*MT[mu,rho]*
		MT[sigma,tau]+MT[ka,mu]*MT[nu,rho]*MT[sigma,tau]},{}};
		scpexp[encli,n]
]
,
(* A_{i1,i2,i3,i4,i5,i6,i7} *)
tidl[{{q_,_},{q_,_},{q_,_},{q_,_},{q_,_},{q_,_},{q_,_}},{},_] :> 0
,
(* A_{i1,i2,i3,i4,i5,i6,i7,i8} *)
tidl[{{q_,i1_},{q_,i2_},{q_,i3_},{q_,i4_},{q_,i5_},{q_,i6_},{q_,i7_},{q_,i8_}},{},n_] :>
Block[	{encli,m1,m10,m11,m12,m13,m14,m15,m16,m17,m18,m19,m2,m20,m21,m22,m23,
		m24,m25,m26,m27,m28,m3,m4,m5,m6,m7,m8,m9,s1,s2,s3,s4,t1},

		encli={(s4*t1^4)/(n*s1*s2*s3), {s1 -> 2 + n, s2 -> 4 + n, s3 -> 6 + n,
		s4 -> m1*m18*m21*m23 + m13*m2*m21*m23 + m1*m17*m22*m23 + m12*m2*m22*m23 +
		m1*m18*m20*m24 + m13*m2*m20*m24 + m1*m16*m22*m24 + m11*m2*m22*m24 +
		m1*m17*m20*m25 + m12*m2*m20*m25 + m1*m16*m21*m25 + m11*m2*m21*m25 +
		m1*m18*m19*m26 + m13*m19*m2*m26 + m1*m15*m22*m26 + m10*m2*m22*m26 +
		m1*m14*m25*m26 + m1*m17*m19*m27 + m12*m19*m2*m27 + m1*m15*m21*m27 +
		m10*m2*m21*m27 + m1*m14*m24*m27 + m1*m16*m19*m28 + m11*m19*m2*m28 +
		m1*m15*m20*m28 + m10*m2*m20*m28 + m1*m14*m23*m28 + m13*m17*m23*m3 +
		m12*m18*m23*m3 + m13*m16*m24*m3 + m11*m18*m24*m3 + m12*m16*m25*m3 +
		m11*m17*m25*m3 + m13*m15*m26*m3 + m10*m18*m26*m3 + m12*m15*m27*m3 +
		m10*m17*m27*m3 + m11*m15*m28*m3 + m10*m16*m28*m3 + m13*m17*m20*m4 +
		m12*m18*m20*m4 + m13*m16*m21*m4 + m11*m18*m21*m4 + m12*m16*m22*m4 +
		m11*m17*m22*m4 + m13*m14*m26*m4 + m12*m14*m27*m4 + m11*m14*m28*m4 +
		m13*m17*m19*m5 + m12*m18*m19*m5 + m13*m15*m21*m5 + m10*m18*m21*m5 +
		m12*m15*m22*m5 + m10*m17*m22*m5 + m13*m14*m24*m5 + m12*m14*m25*m5 +
		m10*m14*m28*m5 + m13*m16*m19*m6 + m11*m18*m19*m6 + m13*m15*m20*m6 +
		m10*m18*m20*m6 + m11*m15*m22*m6 + m10*m16*m22*m6 + m13*m14*m23*m6 +
		m11*m14*m25*m6 + m10*m14*m27*m6 + m12*m16*m19*m7 + m11*m17*m19*m7 +
		m12*m15*m20*m7 + m10*m17*m20*m7 + m11*m15*m21*m7 + m10*m16*m21*m7 +
		m12*m14*m23*m7 + m11*m14*m24*m7 + m10*m14*m26*m7 + m25*m26*m3*m8 +
		m24*m27*m3*m8 + m23*m28*m3*m8 + m22*m26*m4*m8 + m21*m27*m4*m8 +
		m20*m28*m4*m8 + m22*m24*m5*m8 + m21*m25*m5*m8 + m19*m28*m5*m8 +
		m22*m23*m6*m8 + m20*m25*m6*m8 + m19*m27*m6*m8 + m21*m23*m7*m8 +
		m20*m24*m7*m8 + m19*m26*m7*m8 + m2*m25*m26*m9 + m2*m24*m27*m9 +
		m2*m23*m28*m9 + m18*m26*m4*m9 + m17*m27*m4*m9 + m16*m28*m4*m9 +
		m18*m24*m5*m9 + m17*m25*m5*m9 + m15*m28*m5*m9 + m18*m23*m6*m9 +
		m16*m25*m6*m9 + m15*m27*m6*m9 + m17*m23*m7*m9 + m16*m24*m7*m9 +
		m15*m26*m7*m9}, {m1 -> MT[i1, i2], m2 -> MT[i1, i3], m3 -> MT[i1, i4],
		m4 -> MT[i1, i5], m5 -> MT[i1, i6], m6 -> MT[i1, i7], m7 -> MT[i1, i8],
		m8 -> MT[i2, i3], m9 -> MT[i2, i4], m10 -> MT[i2, i5], m11 -> MT[i2, i6],
		m12 -> MT[i2, i7], m13 -> MT[i2, i8], m14 -> MT[i3, i4], m15 -> MT[i3, i5],
		m16 -> MT[i3, i6], m17 -> MT[i3, i7], m18 -> MT[i3, i8], m19 -> MT[i4, i5],
		m20 -> MT[i4, i6], m21 -> MT[i4, i7], m22 -> MT[i4, i8], m23 -> MT[i5, i6],
		m24 -> MT[i5, i7], m25 -> MT[i5, i8], m26 -> MT[i6, i7], m27 -> MT[i6, i8],
		m28 -> MT[i7, i8], t1 -> SP[q, q]}};
		scpexp[encli,n]
]
,
(* A_{i1,i2,i3,i4,i5,i6,i7,i8,i9} *)
tidl[{{q_,_},{q_,_},{q_,_},{q_,_},{q_,_},{q_,_},{q_,_},{q_,_},{q_,_}},{},_] :> 0
,
(* A_{i1,i2,i3,i4,i5,i6,i7,i8,i9,i10} *)
tidl[{{q_,i1_},{q_,i2_},{q_,i3_},{q_,i4_},{q_,i5_},{q_,i6_},{q_,i7_},{q_,i8_},{q_,i9_},{q_,i10_}},{},n_] :>
Block[	{encli,m1,m10,m11,m12,m13,m14,m15,m16,m17,m18,m19,m2,m20,m21,m22,m23,m24,m25,m26,m27,
		m28,m29,m3,m30,m31,m32,m33,m34,m35,m36,m37,m38,m39,m4,m40,m41,m42,m43,m44,
		m45,m5,m6,m7,m8,m9,s1,s2,s3,s4,s5,t1},

		encli={(s5*t1^5)/(n*s1*s2*s3*s4), {s1 -> 2 + n, s2 -> 4 + n, s3 -> 6 + n,
		s4 -> 8 + n, s5 -> m17*m2*m29*m33*m36 + m1*m24*m29*m33*m36 +
		m17*m23*m3*m33*m36 + m16*m24*m3*m33*m36 + m16*m2*m30*m33*m36 +
		m1*m23*m30*m33*m36 + m17*m2*m28*m34*m36 + m1*m24*m28*m34*m36 +
		m17*m22*m3*m34*m36 + m15*m24*m3*m34*m36 + m15*m2*m30*m34*m36 +
		m1*m22*m30*m34*m36 + m16*m2*m28*m35*m36 + m1*m23*m28*m35*m36 +
		m15*m2*m29*m35*m36 + m1*m22*m29*m35*m36 + m16*m22*m3*m35*m36 +
		m15*m23*m3*m35*m36 + m17*m2*m29*m32*m37 + m1*m24*m29*m32*m37 +
		m17*m23*m3*m32*m37 + m16*m24*m3*m32*m37 + m16*m2*m30*m32*m37 +
		m1*m23*m30*m32*m37 + m17*m2*m27*m34*m37 + m1*m24*m27*m34*m37 +
		m17*m21*m3*m34*m37 + m14*m24*m3*m34*m37 + m14*m2*m30*m34*m37 +
		m1*m21*m30*m34*m37 + m16*m2*m27*m35*m37 + m1*m23*m27*m35*m37 +
		m14*m2*m29*m35*m37 + m1*m21*m29*m35*m37 + m16*m21*m3*m35*m37 +
		m14*m23*m3*m35*m37 + m17*m2*m28*m32*m38 + m1*m24*m28*m32*m38 +
		m17*m22*m3*m32*m38 + m15*m24*m3*m32*m38 + m15*m2*m30*m32*m38 +
		m1*m22*m30*m32*m38 + m17*m2*m27*m33*m38 + m1*m24*m27*m33*m38 +
		m17*m21*m3*m33*m38 + m14*m24*m3*m33*m38 + m14*m2*m30*m33*m38 +
		m1*m21*m30*m33*m38 + m15*m2*m27*m35*m38 + m1*m22*m27*m35*m38 +
		m14*m2*m28*m35*m38 + m1*m21*m28*m35*m38 + m15*m21*m3*m35*m38 +
		m14*m22*m3*m35*m38 + m16*m2*m28*m32*m39 + m1*m23*m28*m32*m39 +
		m15*m2*m29*m32*m39 + m1*m22*m29*m32*m39 + m16*m22*m3*m32*m39 +
		m15*m23*m3*m32*m39 + m16*m2*m27*m33*m39 + m1*m23*m27*m33*m39 +
		m14*m2*m29*m33*m39 + m1*m21*m29*m33*m39 + m16*m21*m3*m33*m39 +
		m14*m23*m3*m33*m39 + m15*m2*m27*m34*m39 + m1*m22*m27*m34*m39 +
		m14*m2*m28*m34*m39 + m1*m21*m28*m34*m39 + m15*m21*m3*m34*m39 +
		m14*m22*m3*m34*m39 + m17*m23*m28*m36*m4 + m16*m24*m28*m36*m4 +
		m17*m22*m29*m36*m4 + m15*m24*m29*m36*m4 + m16*m22*m30*m36*m4 +
		m15*m23*m30*m36*m4 + m17*m23*m27*m37*m4 + m16*m24*m27*m37*m4 +
		m17*m21*m29*m37*m4 + m14*m24*m29*m37*m4 + m16*m21*m30*m37*m4 +
		m14*m23*m30*m37*m4 + m17*m22*m27*m38*m4 + m15*m24*m27*m38*m4 +
		m17*m21*m28*m38*m4 + m14*m24*m28*m38*m4 + m15*m21*m30*m38*m4 +
		m14*m22*m30*m38*m4 + m16*m22*m27*m39*m4 + m15*m23*m27*m39*m4 +
		m16*m21*m28*m39*m4 + m14*m23*m28*m39*m4 + m15*m21*m29*m39*m4 +
		m14*m22*m29*m39*m4 + m17*m2*m29*m31*m40 + m1*m24*m29*m31*m40 +
		m17*m23*m3*m31*m40 + m16*m24*m3*m31*m40 + m16*m2*m30*m31*m40 +
		m1*m23*m30*m31*m40 + m17*m2*m26*m34*m40 + m1*m24*m26*m34*m40 +
		m17*m20*m3*m34*m40 + m13*m24*m3*m34*m40 + m13*m2*m30*m34*m40 +
		m1*m20*m30*m34*m40 + m16*m2*m26*m35*m40 + m1*m23*m26*m35*m40 +
		m13*m2*m29*m35*m40 + m1*m20*m29*m35*m40 + m16*m20*m3*m35*m40 +
		m13*m23*m3*m35*m40 + m17*m2*m25*m38*m40 + m1*m24*m25*m38*m40 +
		m17*m19*m3*m38*m40 + m12*m24*m3*m38*m40 + m1*m19*m30*m38*m40 +
		m12*m2*m30*m38*m40 + m1*m18*m35*m38*m40 + m11*m2*m35*m38*m40 +
		m10*m3*m35*m38*m40 + m16*m2*m25*m39*m40 + m1*m23*m25*m39*m40 +
		m1*m19*m29*m39*m40 + m12*m2*m29*m39*m40 + m16*m19*m3*m39*m40 +
		m12*m23*m3*m39*m40 + m1*m18*m34*m39*m40 + m11*m2*m34*m39*m40 +
		m10*m3*m34*m39*m40 + m17*m23*m26*m4*m40 + m16*m24*m26*m4*m40 +
		m17*m20*m29*m4*m40 + m13*m24*m29*m4*m40 + m16*m20*m30*m4*m40 +
		m13*m23*m30*m4*m40 + m17*m18*m38*m4*m40 + m11*m24*m38*m4*m40 +
		m10*m30*m38*m4*m40 + m16*m18*m39*m4*m40 + m11*m23*m39*m4*m40 +
		m10*m29*m39*m4*m40 + m17*m2*m28*m31*m41 + m1*m24*m28*m31*m41 +
		m17*m22*m3*m31*m41 + m15*m24*m3*m31*m41 + m15*m2*m30*m31*m41 +
		m1*m22*m30*m31*m41 + m17*m2*m26*m33*m41 + m1*m24*m26*m33*m41 +
		m17*m20*m3*m33*m41 + m13*m24*m3*m33*m41 + m13*m2*m30*m33*m41 +
		m1*m20*m30*m33*m41 + m15*m2*m26*m35*m41 + m1*m22*m26*m35*m41 +
		m13*m2*m28*m35*m41 + m1*m20*m28*m35*m41 + m15*m20*m3*m35*m41 +
		m13*m22*m3*m35*m41 + m17*m2*m25*m37*m41 + m1*m24*m25*m37*m41 +
		m17*m19*m3*m37*m41 + m12*m24*m3*m37*m41 + m1*m19*m30*m37*m41 +
		m12*m2*m30*m37*m41 + m1*m18*m35*m37*m41 + m11*m2*m35*m37*m41 +
		m10*m3*m35*m37*m41 + m15*m2*m25*m39*m41 + m1*m22*m25*m39*m41 +
		m1*m19*m28*m39*m41 + m12*m2*m28*m39*m41 + m15*m19*m3*m39*m41 +
		m12*m22*m3*m39*m41 + m1*m18*m33*m39*m41 + m11*m2*m33*m39*m41 +
		m10*m3*m33*m39*m41 + m17*m22*m26*m4*m41 + m15*m24*m26*m4*m41 +
		m17*m20*m28*m4*m41 + m13*m24*m28*m4*m41 + m15*m20*m30*m4*m41 +
		m13*m22*m30*m4*m41 + m17*m18*m37*m4*m41 + m11*m24*m37*m4*m41 +
		m10*m30*m37*m4*m41 + m15*m18*m39*m4*m41 + m11*m22*m39*m4*m41 +
		m10*m28*m39*m4*m41 + m16*m2*m28*m31*m42 + m1*m23*m28*m31*m42 +
		m15*m2*m29*m31*m42 + m1*m22*m29*m31*m42 + m16*m22*m3*m31*m42 +
		m15*m23*m3*m31*m42 + m16*m2*m26*m33*m42 + m1*m23*m26*m33*m42 +
		m13*m2*m29*m33*m42 + m1*m20*m29*m33*m42 + m16*m20*m3*m33*m42 +
		m13*m23*m3*m33*m42 + m15*m2*m26*m34*m42 + m1*m22*m26*m34*m42 +
		m13*m2*m28*m34*m42 + m1*m20*m28*m34*m42 + m15*m20*m3*m34*m42 +
		m13*m22*m3*m34*m42 + m16*m2*m25*m37*m42 + m1*m23*m25*m37*m42 +
		m1*m19*m29*m37*m42 + m12*m2*m29*m37*m42 + m16*m19*m3*m37*m42 +
		m12*m23*m3*m37*m42 + m1*m18*m34*m37*m42 + m11*m2*m34*m37*m42 +
		m10*m3*m34*m37*m42 + m15*m2*m25*m38*m42 + m1*m22*m25*m38*m42 +
		m1*m19*m28*m38*m42 + m12*m2*m28*m38*m42 + m15*m19*m3*m38*m42 +
		m12*m22*m3*m38*m42 + m1*m18*m33*m38*m42 + m11*m2*m33*m38*m42 +
		m10*m3*m33*m38*m42 + m16*m22*m26*m4*m42 + m15*m23*m26*m4*m42 +
		m16*m20*m28*m4*m42 + m13*m23*m28*m4*m42 + m15*m20*m29*m4*m42 +
		m13*m22*m29*m4*m42 + m16*m18*m37*m4*m42 + m11*m23*m37*m4*m42 +
		m10*m29*m37*m4*m42 + m15*m18*m38*m4*m42 + m11*m22*m38*m4*m42 +
		m10*m28*m38*m4*m42 + m17*m2*m27*m31*m43 + m1*m24*m27*m31*m43 +
		m17*m21*m3*m31*m43 + m14*m24*m3*m31*m43 + m14*m2*m30*m31*m43 +
		m1*m21*m30*m31*m43 + m17*m2*m26*m32*m43 + m1*m24*m26*m32*m43 +
		m17*m20*m3*m32*m43 + m13*m24*m3*m32*m43 + m13*m2*m30*m32*m43 +
		m1*m20*m30*m32*m43 + m14*m2*m26*m35*m43 + m1*m21*m26*m35*m43 +
		m13*m2*m27*m35*m43 + m1*m20*m27*m35*m43 + m14*m20*m3*m35*m43 +
		m13*m21*m3*m35*m43 + m17*m2*m25*m36*m43 + m1*m24*m25*m36*m43 +
		m17*m19*m3*m36*m43 + m12*m24*m3*m36*m43 + m1*m19*m30*m36*m43 +
		m12*m2*m30*m36*m43 + m1*m18*m35*m36*m43 + m11*m2*m35*m36*m43 +
		m10*m3*m35*m36*m43 + m14*m2*m25*m39*m43 + m1*m21*m25*m39*m43 +
		m1*m19*m27*m39*m43 + m12*m2*m27*m39*m43 + m14*m19*m3*m39*m43 +
		m12*m21*m3*m39*m43 + m1*m18*m32*m39*m43 + m11*m2*m32*m39*m43 +
		m10*m3*m32*m39*m43 + m17*m21*m26*m4*m43 + m14*m24*m26*m4*m43 +
		m17*m20*m27*m4*m43 + m13*m24*m27*m4*m43 + m14*m20*m30*m4*m43 +
		m13*m21*m30*m4*m43 + m17*m18*m36*m4*m43 + m11*m24*m36*m4*m43 +
		m10*m30*m36*m4*m43 + m14*m18*m39*m4*m43 + m11*m21*m39*m4*m43 +
		m10*m27*m39*m4*m43 + m13*m2*m25*m42*m43 + m1*m20*m25*m42*m43 +
		m1*m19*m26*m42*m43 + m12*m2*m26*m42*m43 + m13*m19*m3*m42*m43 +
		m12*m20*m3*m42*m43 + m1*m18*m31*m42*m43 + m11*m2*m31*m42*m43 +
		m10*m3*m31*m42*m43 + m13*m18*m4*m42*m43 + m11*m20*m4*m42*m43 +
		m10*m26*m4*m42*m43 + m16*m2*m27*m31*m44 + m1*m23*m27*m31*m44 +
		m14*m2*m29*m31*m44 + m1*m21*m29*m31*m44 + m16*m21*m3*m31*m44 +
		m14*m23*m3*m31*m44 + m16*m2*m26*m32*m44 + m1*m23*m26*m32*m44 +
		m13*m2*m29*m32*m44 + m1*m20*m29*m32*m44 + m16*m20*m3*m32*m44 +
		m13*m23*m3*m32*m44 + m14*m2*m26*m34*m44 + m1*m21*m26*m34*m44 +
		m13*m2*m27*m34*m44 + m1*m20*m27*m34*m44 + m14*m20*m3*m34*m44 +
		m13*m21*m3*m34*m44 + m16*m2*m25*m36*m44 + m1*m23*m25*m36*m44 +
		m1*m19*m29*m36*m44 + m12*m2*m29*m36*m44 + m16*m19*m3*m36*m44 +
		m12*m23*m3*m36*m44 + m1*m18*m34*m36*m44 + m11*m2*m34*m36*m44 +
		m10*m3*m34*m36*m44 + m14*m2*m25*m38*m44 + m1*m21*m25*m38*m44 +
		m1*m19*m27*m38*m44 + m12*m2*m27*m38*m44 + m14*m19*m3*m38*m44 +
		m12*m21*m3*m38*m44 + m1*m18*m32*m38*m44 + m11*m2*m32*m38*m44 +
		m10*m3*m32*m38*m44 + m16*m21*m26*m4*m44 + m14*m23*m26*m4*m44 +
		m16*m20*m27*m4*m44 + m13*m23*m27*m4*m44 + m14*m20*m29*m4*m44 +
		m13*m21*m29*m4*m44 + m16*m18*m36*m4*m44 + m11*m23*m36*m4*m44 +
		m10*m29*m36*m4*m44 + m14*m18*m38*m4*m44 + m11*m21*m38*m4*m44 +
		m10*m27*m38*m4*m44 + m13*m2*m25*m41*m44 + m1*m20*m25*m41*m44 +
		m1*m19*m26*m41*m44 + m12*m2*m26*m41*m44 + m13*m19*m3*m41*m44 +
		m12*m20*m3*m41*m44 + m1*m18*m31*m41*m44 + m11*m2*m31*m41*m44 +
		m10*m3*m31*m41*m44 + m13*m18*m4*m41*m44 + m11*m20*m4*m41*m44 +
		m10*m26*m4*m41*m44 + m15*m2*m27*m31*m45 + m1*m22*m27*m31*m45 +
		m14*m2*m28*m31*m45 + m1*m21*m28*m31*m45 + m15*m21*m3*m31*m45 +
		m14*m22*m3*m31*m45 + m15*m2*m26*m32*m45 + m1*m22*m26*m32*m45 +
		m13*m2*m28*m32*m45 + m1*m20*m28*m32*m45 + m15*m20*m3*m32*m45 +
		m13*m22*m3*m32*m45 + m14*m2*m26*m33*m45 + m1*m21*m26*m33*m45 +
		m13*m2*m27*m33*m45 + m1*m20*m27*m33*m45 + m14*m20*m3*m33*m45 +
		m13*m21*m3*m33*m45 + m15*m2*m25*m36*m45 + m1*m22*m25*m36*m45 +
		m1*m19*m28*m36*m45 + m12*m2*m28*m36*m45 + m15*m19*m3*m36*m45 +
		m12*m22*m3*m36*m45 + m1*m18*m33*m36*m45 + m11*m2*m33*m36*m45 +
		m10*m3*m33*m36*m45 + m14*m2*m25*m37*m45 + m1*m21*m25*m37*m45 +
		m1*m19*m27*m37*m45 + m12*m2*m27*m37*m45 + m14*m19*m3*m37*m45 +
		m12*m21*m3*m37*m45 + m1*m18*m32*m37*m45 + m11*m2*m32*m37*m45 +
		m10*m3*m32*m37*m45 + m15*m21*m26*m4*m45 + m14*m22*m26*m4*m45 +
		m15*m20*m27*m4*m45 + m13*m22*m27*m4*m45 + m14*m20*m28*m4*m45 +
		m13*m21*m28*m4*m45 + m15*m18*m36*m4*m45 + m11*m22*m36*m4*m45 +
		m10*m28*m36*m4*m45 + m14*m18*m37*m4*m45 + m11*m21*m37*m4*m45 +
		m10*m27*m37*m4*m45 + m13*m2*m25*m40*m45 + m1*m20*m25*m40*m45 +
		m1*m19*m26*m40*m45 + m12*m2*m26*m40*m45 + m13*m19*m3*m40*m45 +
		m12*m20*m3*m40*m45 + m1*m18*m31*m40*m45 + m11*m2*m31*m40*m45 +
		m10*m3*m31*m40*m45 + m13*m18*m4*m40*m45 + m11*m20*m4*m40*m45 +
		m10*m26*m4*m40*m45 + m17*m23*m28*m32*m5 + m16*m24*m28*m32*m5 +
		m17*m22*m29*m32*m5 + m15*m24*m29*m32*m5 + m16*m22*m30*m32*m5 +
		m15*m23*m30*m32*m5 + m17*m23*m27*m33*m5 + m16*m24*m27*m33*m5 +
		m17*m21*m29*m33*m5 + m14*m24*m29*m33*m5 + m16*m21*m30*m33*m5 +
		m14*m23*m30*m33*m5 + m17*m22*m27*m34*m5 + m15*m24*m27*m34*m5 +
		m17*m21*m28*m34*m5 + m14*m24*m28*m34*m5 + m15*m21*m30*m34*m5 +
		m14*m22*m30*m34*m5 + m16*m22*m27*m35*m5 + m15*m23*m27*m35*m5 +
		m16*m21*m28*m35*m5 + m14*m23*m28*m35*m5 + m15*m21*m29*m35*m5 +
		m14*m22*m29*m35*m5 + m17*m23*m25*m40*m5 + m16*m24*m25*m40*m5 +
		m17*m19*m29*m40*m5 + m12*m24*m29*m40*m5 + m16*m19*m30*m40*m5 +
		m12*m23*m30*m40*m5 + m17*m18*m34*m40*m5 + m11*m24*m34*m40*m5 +
		m10*m30*m34*m40*m5 + m16*m18*m35*m40*m5 + m11*m23*m35*m40*m5 +
		m10*m29*m35*m40*m5 + m17*m22*m25*m41*m5 + m15*m24*m25*m41*m5 +
		m17*m19*m28*m41*m5 + m12*m24*m28*m41*m5 + m15*m19*m30*m41*m5 +
		m12*m22*m30*m41*m5 + m17*m18*m33*m41*m5 + m11*m24*m33*m41*m5 +
		m10*m30*m33*m41*m5 + m15*m18*m35*m41*m5 + m11*m22*m35*m41*m5 +
		m10*m28*m35*m41*m5 + m16*m22*m25*m42*m5 + m15*m23*m25*m42*m5 +
		m16*m19*m28*m42*m5 + m12*m23*m28*m42*m5 + m15*m19*m29*m42*m5 +
		m12*m22*m29*m42*m5 + m16*m18*m33*m42*m5 + m11*m23*m33*m42*m5 +
		m10*m29*m33*m42*m5 + m15*m18*m34*m42*m5 + m11*m22*m34*m42*m5 +
		m10*m28*m34*m42*m5 + m17*m21*m25*m43*m5 + m14*m24*m25*m43*m5 +
		m17*m19*m27*m43*m5 + m12*m24*m27*m43*m5 + m14*m19*m30*m43*m5 +
		m12*m21*m30*m43*m5 + m17*m18*m32*m43*m5 + m11*m24*m32*m43*m5 +
		m10*m30*m32*m43*m5 + m14*m18*m35*m43*m5 + m11*m21*m35*m43*m5 +
		m10*m27*m35*m43*m5 + m12*m18*m42*m43*m5 + m11*m19*m42*m43*m5 +
		m10*m25*m42*m43*m5 + m16*m21*m25*m44*m5 + m14*m23*m25*m44*m5 +
		m16*m19*m27*m44*m5 + m12*m23*m27*m44*m5 + m14*m19*m29*m44*m5 +
		m12*m21*m29*m44*m5 + m16*m18*m32*m44*m5 + m11*m23*m32*m44*m5 +
		m10*m29*m32*m44*m5 + m14*m18*m34*m44*m5 + m11*m21*m34*m44*m5 +
		m10*m27*m34*m44*m5 + m12*m18*m41*m44*m5 + m11*m19*m41*m44*m5 +
		m10*m25*m41*m44*m5 + m15*m21*m25*m45*m5 + m14*m22*m25*m45*m5 +
		m15*m19*m27*m45*m5 + m12*m22*m27*m45*m5 + m14*m19*m28*m45*m5 +
		m12*m21*m28*m45*m5 + m15*m18*m32*m45*m5 + m11*m22*m32*m45*m5 +
		m10*m28*m32*m45*m5 + m14*m18*m33*m45*m5 + m11*m21*m33*m45*m5 +
		m10*m27*m33*m45*m5 + m12*m18*m40*m45*m5 + m11*m19*m40*m45*m5 +
		m10*m25*m40*m45*m5 + m17*m23*m28*m31*m6 + m16*m24*m28*m31*m6 +
		m17*m22*m29*m31*m6 + m15*m24*m29*m31*m6 + m16*m22*m30*m31*m6 +
		m15*m23*m30*m31*m6 + m17*m23*m26*m33*m6 + m16*m24*m26*m33*m6 +
		m17*m20*m29*m33*m6 + m13*m24*m29*m33*m6 + m16*m20*m30*m33*m6 +
		m13*m23*m30*m33*m6 + m17*m22*m26*m34*m6 + m15*m24*m26*m34*m6 +
		m17*m20*m28*m34*m6 + m13*m24*m28*m34*m6 + m15*m20*m30*m34*m6 +
		m13*m22*m30*m34*m6 + m16*m22*m26*m35*m6 + m15*m23*m26*m35*m6 +
		m16*m20*m28*m35*m6 + m13*m23*m28*m35*m6 + m15*m20*m29*m35*m6 +
		m13*m22*m29*m35*m6 + m17*m23*m25*m37*m6 + m16*m24*m25*m37*m6 +
		m17*m19*m29*m37*m6 + m12*m24*m29*m37*m6 + m16*m19*m30*m37*m6 +
		m12*m23*m30*m37*m6 + m17*m18*m34*m37*m6 + m11*m24*m34*m37*m6 +
		m10*m30*m34*m37*m6 + m16*m18*m35*m37*m6 + m11*m23*m35*m37*m6 +
		m10*m29*m35*m37*m6 + m17*m22*m25*m38*m6 + m15*m24*m25*m38*m6 +
		m17*m19*m28*m38*m6 + m12*m24*m28*m38*m6 + m15*m19*m30*m38*m6 +
		m12*m22*m30*m38*m6 + m17*m18*m33*m38*m6 + m11*m24*m33*m38*m6 +
		m10*m30*m33*m38*m6 + m15*m18*m35*m38*m6 + m11*m22*m35*m38*m6 +
		m10*m28*m35*m38*m6 + m16*m22*m25*m39*m6 + m15*m23*m25*m39*m6 +
		m16*m19*m28*m39*m6 + m12*m23*m28*m39*m6 + m15*m19*m29*m39*m6 +
		m12*m22*m29*m39*m6 + m16*m18*m33*m39*m6 + m11*m23*m33*m39*m6 +
		m10*m29*m33*m39*m6 + m15*m18*m34*m39*m6 + m11*m22*m34*m39*m6 +
		m10*m28*m34*m39*m6 + m17*m20*m25*m43*m6 + m13*m24*m25*m43*m6 +
		m17*m19*m26*m43*m6 + m12*m24*m26*m43*m6 + m13*m19*m30*m43*m6 +
		m12*m20*m30*m43*m6 + m17*m18*m31*m43*m6 + m11*m24*m31*m43*m6 +
		m10*m30*m31*m43*m6 + m13*m18*m35*m43*m6 + m11*m20*m35*m43*m6 +
		m10*m26*m35*m43*m6 + m12*m18*m39*m43*m6 + m11*m19*m39*m43*m6 +
		m10*m25*m39*m43*m6 + m16*m20*m25*m44*m6 + m13*m23*m25*m44*m6 +
		m16*m19*m26*m44*m6 + m12*m23*m26*m44*m6 + m13*m19*m29*m44*m6 +
		m12*m20*m29*m44*m6 + m16*m18*m31*m44*m6 + m11*m23*m31*m44*m6 +
		m10*m29*m31*m44*m6 + m13*m18*m34*m44*m6 + m11*m20*m34*m44*m6 +
		m10*m26*m34*m44*m6 + m12*m18*m38*m44*m6 + m11*m19*m38*m44*m6 +
		m10*m25*m38*m44*m6 + m15*m20*m25*m45*m6 + m13*m22*m25*m45*m6 +
		m15*m19*m26*m45*m6 + m12*m22*m26*m45*m6 + m13*m19*m28*m45*m6 +
		m12*m20*m28*m45*m6 + m15*m18*m31*m45*m6 + m11*m22*m31*m45*m6 +
		m10*m28*m31*m45*m6 + m13*m18*m33*m45*m6 + m11*m20*m33*m45*m6 +
		m10*m26*m33*m45*m6 + m12*m18*m37*m45*m6 + m11*m19*m37*m45*m6 +
		m10*m25*m37*m45*m6 + m17*m23*m27*m31*m7 + m16*m24*m27*m31*m7 +
		m17*m21*m29*m31*m7 + m14*m24*m29*m31*m7 + m16*m21*m30*m31*m7 +
		m14*m23*m30*m31*m7 + m17*m23*m26*m32*m7 + m16*m24*m26*m32*m7 +
		m17*m20*m29*m32*m7 + m13*m24*m29*m32*m7 + m16*m20*m30*m32*m7 +
		m13*m23*m30*m32*m7 + m17*m21*m26*m34*m7 + m14*m24*m26*m34*m7 +
		m17*m20*m27*m34*m7 + m13*m24*m27*m34*m7 + m14*m20*m30*m34*m7 +
		m13*m21*m30*m34*m7 + m16*m21*m26*m35*m7 + m14*m23*m26*m35*m7 +
		m16*m20*m27*m35*m7 + m13*m23*m27*m35*m7 + m14*m20*m29*m35*m7 +
		m13*m21*m29*m35*m7 + m17*m23*m25*m36*m7 + m16*m24*m25*m36*m7 +
		m17*m19*m29*m36*m7 + m12*m24*m29*m36*m7 + m16*m19*m30*m36*m7 +
		m12*m23*m30*m36*m7 + m17*m18*m34*m36*m7 + m11*m24*m34*m36*m7 +
		m10*m30*m34*m36*m7 + m16*m18*m35*m36*m7 + m11*m23*m35*m36*m7 +
		m10*m29*m35*m36*m7 + m17*m21*m25*m38*m7 + m14*m24*m25*m38*m7 +
		m17*m19*m27*m38*m7 + m12*m24*m27*m38*m7 + m14*m19*m30*m38*m7 +
		m12*m21*m30*m38*m7 + m17*m18*m32*m38*m7 + m11*m24*m32*m38*m7 +
		m10*m30*m32*m38*m7 + m14*m18*m35*m38*m7 + m11*m21*m35*m38*m7 +
		m10*m27*m35*m38*m7 + m16*m21*m25*m39*m7 + m14*m23*m25*m39*m7 +
		m16*m19*m27*m39*m7 + m12*m23*m27*m39*m7 + m14*m19*m29*m39*m7 +
		m12*m21*m29*m39*m7 + m16*m18*m32*m39*m7 + m11*m23*m32*m39*m7 +
		m10*m29*m32*m39*m7 + m14*m18*m34*m39*m7 + m11*m21*m34*m39*m7 +
		m10*m27*m34*m39*m7 + m17*m20*m25*m41*m7 + m13*m24*m25*m41*m7 +
		m17*m19*m26*m41*m7 + m12*m24*m26*m41*m7 + m13*m19*m30*m41*m7 +
		m12*m20*m30*m41*m7 + m17*m18*m31*m41*m7 + m11*m24*m31*m41*m7 +
		m10*m30*m31*m41*m7 + m13*m18*m35*m41*m7 + m11*m20*m35*m41*m7 +
		m10*m26*m35*m41*m7 + m12*m18*m39*m41*m7 + m11*m19*m39*m41*m7 +
		m10*m25*m39*m41*m7 + m16*m20*m25*m42*m7 + m13*m23*m25*m42*m7 +
		m16*m19*m26*m42*m7 + m12*m23*m26*m42*m7 + m13*m19*m29*m42*m7 +
		m12*m20*m29*m42*m7 + m16*m18*m31*m42*m7 + m11*m23*m31*m42*m7 +
		m10*m29*m31*m42*m7 + m13*m18*m34*m42*m7 + m11*m20*m34*m42*m7 +
		m10*m26*m34*m42*m7 + m12*m18*m38*m42*m7 + m11*m19*m38*m42*m7 +
		m10*m25*m38*m42*m7 + m14*m20*m25*m45*m7 + m13*m21*m25*m45*m7 +
		m14*m19*m26*m45*m7 + m12*m21*m26*m45*m7 + m13*m19*m27*m45*m7 +
		m12*m20*m27*m45*m7 + m14*m18*m31*m45*m7 + m11*m21*m31*m45*m7 +
		m10*m27*m31*m45*m7 + m13*m18*m32*m45*m7 + m11*m20*m32*m45*m7 +
		m10*m26*m32*m45*m7 + m12*m18*m36*m45*m7 + m11*m19*m36*m45*m7 +
		m10*m25*m36*m45*m7 + m17*m22*m27*m31*m8 + m15*m24*m27*m31*m8 +
		m17*m21*m28*m31*m8 + m14*m24*m28*m31*m8 + m15*m21*m30*m31*m8 +
		m14*m22*m30*m31*m8 + m17*m22*m26*m32*m8 + m15*m24*m26*m32*m8 +
		m17*m20*m28*m32*m8 + m13*m24*m28*m32*m8 + m15*m20*m30*m32*m8 +
		m13*m22*m30*m32*m8 + m17*m21*m26*m33*m8 + m14*m24*m26*m33*m8 +
		m17*m20*m27*m33*m8 + m13*m24*m27*m33*m8 + m14*m20*m30*m33*m8 +
		m13*m21*m30*m33*m8 + m15*m21*m26*m35*m8 + m14*m22*m26*m35*m8 +
		m15*m20*m27*m35*m8 + m13*m22*m27*m35*m8 + m14*m20*m28*m35*m8 +
		m13*m21*m28*m35*m8 + m17*m22*m25*m36*m8 + m15*m24*m25*m36*m8 +
		m17*m19*m28*m36*m8 + m12*m24*m28*m36*m8 + m15*m19*m30*m36*m8 +
		m12*m22*m30*m36*m8 + m17*m18*m33*m36*m8 + m11*m24*m33*m36*m8 +
		m10*m30*m33*m36*m8 + m15*m18*m35*m36*m8 + m11*m22*m35*m36*m8 +
		m10*m28*m35*m36*m8 + m17*m21*m25*m37*m8 + m14*m24*m25*m37*m8 +
		m17*m19*m27*m37*m8 + m12*m24*m27*m37*m8 + m14*m19*m30*m37*m8 +
		m12*m21*m30*m37*m8 + m17*m18*m32*m37*m8 + m11*m24*m32*m37*m8 +
		m10*m30*m32*m37*m8 + m14*m18*m35*m37*m8 + m11*m21*m35*m37*m8 +
		m10*m27*m35*m37*m8 + m15*m21*m25*m39*m8 + m14*m22*m25*m39*m8 +
		m15*m19*m27*m39*m8 + m12*m22*m27*m39*m8 + m14*m19*m28*m39*m8 +
		m12*m21*m28*m39*m8 + m15*m18*m32*m39*m8 + m11*m22*m32*m39*m8 +
		m10*m28*m32*m39*m8 + m14*m18*m33*m39*m8 + m11*m21*m33*m39*m8 +
		m10*m27*m33*m39*m8 + m17*m20*m25*m40*m8 + m13*m24*m25*m40*m8 +
		m17*m19*m26*m40*m8 + m12*m24*m26*m40*m8 + m13*m19*m30*m40*m8 +
		m12*m20*m30*m40*m8 + m17*m18*m31*m40*m8 + m11*m24*m31*m40*m8 +
		m10*m30*m31*m40*m8 + m13*m18*m35*m40*m8 + m11*m20*m35*m40*m8 +
		m10*m26*m35*m40*m8 + m12*m18*m39*m40*m8 + m11*m19*m39*m40*m8 +
		m10*m25*m39*m40*m8 + m15*m20*m25*m42*m8 + m13*m22*m25*m42*m8 +
		m15*m19*m26*m42*m8 + m12*m22*m26*m42*m8 + m13*m19*m28*m42*m8 +
		m12*m20*m28*m42*m8 + m15*m18*m31*m42*m8 + m11*m22*m31*m42*m8 +
		m10*m28*m31*m42*m8 + m13*m18*m33*m42*m8 + m11*m20*m33*m42*m8 +
		m10*m26*m33*m42*m8 + m12*m18*m37*m42*m8 + m11*m19*m37*m42*m8 +
		m10*m25*m37*m42*m8 + m14*m20*m25*m44*m8 + m13*m21*m25*m44*m8 +
		m14*m19*m26*m44*m8 + m12*m21*m26*m44*m8 + m13*m19*m27*m44*m8 +
		m12*m20*m27*m44*m8 + m14*m18*m31*m44*m8 + m11*m21*m31*m44*m8 +
		m10*m27*m31*m44*m8 + m13*m18*m32*m44*m8 + m11*m20*m32*m44*m8 +
		m10*m26*m32*m44*m8 + m12*m18*m36*m44*m8 + m11*m19*m36*m44*m8 +
		m10*m25*m36*m44*m8 + m16*m22*m27*m31*m9 + m15*m23*m27*m31*m9 +
		m16*m21*m28*m31*m9 + m14*m23*m28*m31*m9 + m15*m21*m29*m31*m9 +
		m14*m22*m29*m31*m9 + m16*m22*m26*m32*m9 + m15*m23*m26*m32*m9 +
		m16*m20*m28*m32*m9 + m13*m23*m28*m32*m9 + m15*m20*m29*m32*m9 +
		m13*m22*m29*m32*m9 + m16*m21*m26*m33*m9 + m14*m23*m26*m33*m9 +
		m16*m20*m27*m33*m9 + m13*m23*m27*m33*m9 + m14*m20*m29*m33*m9 +
		m13*m21*m29*m33*m9 + m15*m21*m26*m34*m9 + m14*m22*m26*m34*m9 +
		m15*m20*m27*m34*m9 + m13*m22*m27*m34*m9 + m14*m20*m28*m34*m9 +
		m13*m21*m28*m34*m9 + m16*m22*m25*m36*m9 + m15*m23*m25*m36*m9 +
		m16*m19*m28*m36*m9 + m12*m23*m28*m36*m9 + m15*m19*m29*m36*m9 +
		m12*m22*m29*m36*m9 + m16*m18*m33*m36*m9 + m11*m23*m33*m36*m9 +
		m10*m29*m33*m36*m9 + m15*m18*m34*m36*m9 + m11*m22*m34*m36*m9 +
		m10*m28*m34*m36*m9 + m16*m21*m25*m37*m9 + m14*m23*m25*m37*m9 +
		m16*m19*m27*m37*m9 + m12*m23*m27*m37*m9 + m14*m19*m29*m37*m9 +
		m12*m21*m29*m37*m9 + m16*m18*m32*m37*m9 + m11*m23*m32*m37*m9 +
		m10*m29*m32*m37*m9 + m14*m18*m34*m37*m9 + m11*m21*m34*m37*m9 +
		m10*m27*m34*m37*m9 + m15*m21*m25*m38*m9 + m14*m22*m25*m38*m9 +
		m15*m19*m27*m38*m9 + m12*m22*m27*m38*m9 + m14*m19*m28*m38*m9 +
		m12*m21*m28*m38*m9 + m15*m18*m32*m38*m9 + m11*m22*m32*m38*m9 +
		m10*m28*m32*m38*m9 + m14*m18*m33*m38*m9 + m11*m21*m33*m38*m9 +
		m10*m27*m33*m38*m9 + m16*m20*m25*m40*m9 + m13*m23*m25*m40*m9 +
		m16*m19*m26*m40*m9 + m12*m23*m26*m40*m9 + m13*m19*m29*m40*m9 +
		m12*m20*m29*m40*m9 + m16*m18*m31*m40*m9 + m11*m23*m31*m40*m9 +
		m10*m29*m31*m40*m9 + m13*m18*m34*m40*m9 + m11*m20*m34*m40*m9 +
		m10*m26*m34*m40*m9 + m12*m18*m38*m40*m9 + m11*m19*m38*m40*m9 +
		m10*m25*m38*m40*m9 + m15*m20*m25*m41*m9 + m13*m22*m25*m41*m9 +
		m15*m19*m26*m41*m9 + m12*m22*m26*m41*m9 + m13*m19*m28*m41*m9 +
		m12*m20*m28*m41*m9 + m15*m18*m31*m41*m9 + m11*m22*m31*m41*m9 +
		m10*m28*m31*m41*m9 + m13*m18*m33*m41*m9 + m11*m20*m33*m41*m9 +
		m10*m26*m33*m41*m9 + m12*m18*m37*m41*m9 + m11*m19*m37*m41*m9 +
		m10*m25*m37*m41*m9 + m14*m20*m25*m43*m9 + m13*m21*m25*m43*m9 +
		m14*m19*m26*m43*m9 + m12*m21*m26*m43*m9 + m13*m19*m27*m43*m9 +
		m12*m20*m27*m43*m9 + m14*m18*m31*m43*m9 + m11*m21*m31*m43*m9 +
		m10*m27*m31*m43*m9 + m13*m18*m32*m43*m9 + m11*m20*m32*m43*m9 +
		m10*m26*m32*m43*m9 + m12*m18*m36*m43*m9 + m11*m19*m36*m43*m9 +
		m10*m25*m36*m43*m9}, {m1 -> MT[i1, i10], m2 -> MT[i1, i2],
		m3 -> MT[i1, i3], m4 -> MT[i1, i4], m5 -> MT[i1, i5], m6 -> MT[i1, i6],
		m7 -> MT[i1, i7], m8 -> MT[i1, i8], m9 -> MT[i1, i9], m10 -> MT[i10, i2],
		m11 -> MT[i10, i3], m12 -> MT[i10, i4], m13 -> MT[i10, i5],
		m14 -> MT[i10, i6], m15 -> MT[i10, i7], m16 -> MT[i10, i8],
		m17 -> MT[i10, i9], m18 -> MT[i2, i3], m19 -> MT[i2, i4],
		m20 -> MT[i2, i5], m21 -> MT[i2, i6], m22 -> MT[i2, i7], m23 -> MT[i2, i8],
		m24 -> MT[i2, i9], m25 -> MT[i3, i4], m26 -> MT[i3, i5], m27 -> MT[i3, i6],
		m28 -> MT[i3, i7], m29 -> MT[i3, i8], m30 -> MT[i3, i9], m31 -> MT[i4, i5],
		m32 -> MT[i4, i6], m33 -> MT[i4, i7], m34 -> MT[i4, i8], m35 -> MT[i4, i9],
		m36 -> MT[i5, i6], m37 -> MT[i5, i7], m38 -> MT[i5, i8], m39 -> MT[i5, i9],
		m40 -> MT[i6, i7], m41 -> MT[i6, i8], m42 -> MT[i6, i9], m43 -> MT[i7, i8],
		m44 -> MT[i7, i9], m45 -> MT[i8, i9], t1 -> SP[q, q]}};
		scpexp[encli,n]
]
}



