{
tidl[{{q1_, mu_}, {q2_, nu_}, {q3_, rho_}}, {p_},n_]/;
Expand[ExpandScalarProduct[(Pair[Momentum[p1, n], Momentum[p2, n]]^2 -
Pair[Momentum[p1, n], Momentum[p1, n]] Pair[Momentum[p2, n], Momentum[p2, n]])]] =!= 0 &&
q1=!=q2 && q1=!=q3 && q2=!=q3 :>
        Block[{s1,s2,s3,s4,s5,t1,t2,t3,t4,t5,t6,t7,v1,v2,v3,m1,m2,m3,encli},
                encli=
                {(m3*s4*t2*v1)/(s1*t1^2)+(m2*s3*t3*v2)/(s1*t1^2)+
                (m1*s2*t4*v3)/(s1*t1^2)-(s5*v1*v2*v3)/(s1*t1^3),
                {s1->1-n,s2->t2*t3-t1*t5,s3->t2*t4-t1*t6,s4->t3*t4-t1*t7,
                s5->2*t2*t3*t4+n*t2*t3*t4-t1*t4*t5-t1*t3*t6-t1*t2*t7},
                {t1->SP[p,p],t2->SP[p,q1],t3->SP[p,q2],t4->SP[p,q3],
                t5->SP[q1,q2],t6->SP[q1,q3],t7->SP[q2,q3],v1->FV[p,mu],
                v2->FV[p,nu],v3->FV[p,rho],m1->MT[mu,nu],m2->MT[mu,rho],
                m3->MT[nu,rho]}};
                scpexp[encli,n]
        ],
tidl[{{q1_, mu_}, {q2_, nu_}, {q3_, rho_}}, {p1_, p2_},n_]/;
Expand[ExpandScalarProduct[(Pair[Momentum[p1, n], Momentum[p2, n]]^2 -
Pair[Momentum[p1, n], Momentum[p1, n]] Pair[Momentum[p2, n], Momentum[p2, n]])]] =!= 0 &&
q1=!=q2 && q1=!=q3 && q2=!=q3 :>
        Block[{s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,
                s18,s19,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,v1,v2,v3,v4,v5,
                v6,m1,m2,m3,encli},
                encli=
                {(m3*s10*s11*v1)/(s1*s2^2)+(m2*s7*s8*v2)/(s1*s2^2)+
                (m1*s4*s5*v3)/(s1*s2^2)+(s19*v1*v2*v3)/(s1*s2^3)+
                (m3*s10*s9*v4)/(s1*s2^2)+(s18*v2*v3*v4)/(s1*s2^3)+
                (m2*s6*s7*v5)/(s1*s2^2)+(s17*v1*v3*v5)/(s1*s2^3)+
                (s13*v3*v4*v5)/(s1*s2^3)+(m1*s3*s4*v6)/(s1*s2^2)+
                (s16*v1*v2*v6)/(s1*s2^3)+(s14*v2*v4*v6)/(s1*s2^3)+
                (s15*v1*v5*v6)/(s1*s2^3)+(s12*v4*v5*v6)/(s1*s2^3),
                {s1->-2+n,s2->t2^2-t1*t6,s3->t2*t5-t1*t9,
                s4->t10*t2^2-t1*t10*t6+t3*t4*t6-t2*t4*t7-t2*t3*t8+t1*t7*t8,
                s5->-(t5*t6)+t2*t9,s6->t2*t4-t1*t8,
                s7->t11*t2^2-t1*t11*t6+t3*t5*t6-t2*t5*t7-t2*t3*t9+t1*t7*t9,
                s8->-(t4*t6)+t2*t8,s9->t2*t3-t1*t7,
                s10->t12*t2^2-t1*t12*t6+t4*t5*t6-t2*t5*t8-t2*t4*t9+t1*t8*t9,
                s11->-(t3*t6)+t2*t7,s12->t1*t12*t2^3*t3+t1*t11*t2^3*t4+
                t1*t10*t2^3*t5-2*t2^3*t3*t4*t5+n*t2^3*t3*t4*t5-t1^2*t12*t2*t3*t6-
                t1^2*t11*t2*t4*t6-t1^2*t10*t2*t5*t6+3*t1*t2*t3*t4*t5*t6-
                t1^2*t12*t2^2*t7-n*t1*t2^2*t4*t5*t7+t1^3*t12*t6*t7-
                t1^2*t4*t5*t6*t7-t1^2*t11*t2^2*t8-n*t1*t2^2*t3*t5*t8+
                t1^3*t11*t6*t8-t1^2*t3*t5*t6*t8+t1^2*t2*t5*t7*t8+
                n*t1^2*t2*t5*t7*t8-t1^2*t10*t2^2*t9-n*t1*t2^2*t3*t4*t9+
                t1^3*t10*t6*t9-t1^2*t3*t4*t6*t9+t1^2*t2*t4*t7*t9+
                n*t1^2*t2*t4*t7*t9+t1^2*t2*t3*t8*t9+n*t1^2*t2*t3*t8*t9-
                t1^3*t7*t8*t9-n*t1^3*t7*t8*t9,
                s13->-(t12*t2^4*t3)-t11*t2^4*t4+t1*t12*t2^2*t3*t6+
                t1*t11*t2^2*t4*t6-t1*t10*t2^2*t5*t6-n*t2^2*t3*t4*t5*t6+
                t1^2*t10*t5*t6^2-t1*t3*t4*t5*t6^2+t1*t12*t2^3*t7+t2^3*t4*t5*t7-
                t1^2*t12*t2*t6*t7+n*t1*t2*t4*t5*t6*t7+t1*t11*t2^3*t8+
                t2^3*t3*t5*t8-t1^2*t11*t2*t6*t8+n*t1*t2*t3*t5*t6*t8-
                2*t1*t2^2*t5*t7*t8+t1^2*t5*t6*t7*t8-n*t1^2*t5*t6*t7*t8+
                t1*t10*t2^3*t9+n*t2^3*t3*t4*t9-t1^2*t10*t2*t6*t9+
                t1*t2*t3*t4*t6*t9-t1*t2^2*t4*t7*t9-n*t1*t2^2*t4*t7*t9-
                t1*t2^2*t3*t8*t9-n*t1*t2^2*t3*t8*t9+t1^2*t2*t7*t8*t9+
                n*t1^2*t2*t7*t8*t9,s14->-(t12*t2^4*t3)-t10*t2^4*t5+
                t1*t12*t2^2*t3*t6-t1*t11*t2^2*t4*t6+t1*t10*t2^2*t5*t6-
                n*t2^2*t3*t4*t5*t6+t1^2*t11*t4*t6^2-t1*t3*t4*t5*t6^2+
                t1*t12*t2^3*t7+t2^3*t4*t5*t7-t1^2*t12*t2*t6*t7+
                n*t1*t2*t4*t5*t6*t7+t1*t11*t2^3*t8+n*t2^3*t3*t5*t8-
                t1^2*t11*t2*t6*t8+t1*t2*t3*t5*t6*t8-t1*t2^2*t5*t7*t8-
                n*t1*t2^2*t5*t7*t8+t1*t10*t2^3*t9+t2^3*t3*t4*t9-t1^2*t10*t2*t6*t9+
                n*t1*t2*t3*t4*t6*t9-2*t1*t2^2*t4*t7*t9+t1^2*t4*t6*t7*t9-
                n*t1^2*t4*t6*t7*t9-t1*t2^2*t3*t8*t9-n*t1*t2^2*t3*t8*t9+
                t1^2*t2*t7*t8*t9+n*t1^2*t2*t7*t8*t9,
                s15->-(t11*t2^4*t4)-t10*t2^4*t5-t1*t12*t2^2*t3*t6+
                t1*t11*t2^2*t4*t6+t1*t10*t2^2*t5*t6-n*t2^2*t3*t4*t5*t6+
                t1^2*t12*t3*t6^2-t1*t3*t4*t5*t6^2+t1*t12*t2^3*t7+n*t2^3*t4*t5*t7-
                t1^2*t12*t2*t6*t7+t1*t2*t4*t5*t6*t7+t1*t11*t2^3*t8+t2^3*t3*t5*t8-
                t1^2*t11*t2*t6*t8+n*t1*t2*t3*t5*t6*t8-t1*t2^2*t5*t7*t8-
                n*t1*t2^2*t5*t7*t8+t1*t10*t2^3*t9+t2^3*t3*t4*t9-t1^2*t10*t2*t6*t9+
                n*t1*t2*t3*t4*t6*t9-t1*t2^2*t4*t7*t9-n*t1*t2^2*t4*t7*t9-
                2*t1*t2^2*t3*t8*t9+t1^2*t3*t6*t8*t9-n*t1^2*t3*t6*t8*t9+
                t1^2*t2*t7*t8*t9+n*t1^2*t2*t7*t8*t9,
                s16->t12*t2^3*t3*t6+t11*t2^3*t4*t6+t10*t2^3*t5*t6-
                t1*t12*t2*t3*t6^2-t1*t11*t2*t4*t6^2-t1*t10*t2*t5*t6^2+
                t2*t3*t4*t5*t6^2+n*t2*t3*t4*t5*t6^2-t12*t2^4*t7+t1*t12*t2^2*t6*t7-
                t2^2*t4*t5*t6*t7-n*t2^2*t4*t5*t6*t7-t11*t2^4*t8+t1*t11*t2^2*t6*t8-
                t2^2*t3*t5*t6*t8-n*t2^2*t3*t5*t6*t8+n*t2^3*t5*t7*t8+
                t1*t2*t5*t6*t7*t8-t1*t10*t2^2*t6*t9-2*t2^2*t3*t4*t6*t9+
                t1^2*t10*t6^2*t9+t1*t3*t4*t6^2*t9-n*t1*t3*t4*t6^2*t9+
                t2^3*t4*t7*t9+n*t1*t2*t4*t6*t7*t9+t2^3*t3*t8*t9+
                n*t1*t2*t3*t6*t8*t9-n*t1*t2^2*t7*t8*t9-t1^2*t6*t7*t8*t9,
                s17->t12*t2^3*t3*t6+t11*t2^3*t4*t6+t10*t2^3*t5*t6-
                t1*t12*t2*t3*t6^2-t1*t11*t2*t4*t6^2-t1*t10*t2*t5*t6^2+
                t2*t3*t4*t5*t6^2+n*t2*t3*t4*t5*t6^2-t12*t2^4*t7+t1*t12*t2^2*t6*t7-
                t2^2*t4*t5*t6*t7-n*t2^2*t4*t5*t6*t7-t1*t11*t2^2*t6*t8-
                2*t2^2*t3*t5*t6*t8+t1^2*t11*t6^2*t8+t1*t3*t5*t6^2*t8-
                n*t1*t3*t5*t6^2*t8+t2^3*t5*t7*t8+n*t1*t2*t5*t6*t7*t8-t10*t2^4*t9+
                t1*t10*t2^2*t6*t9-t2^2*t3*t4*t6*t9-n*t2^2*t3*t4*t6*t9+
                n*t2^3*t4*t7*t9+t1*t2*t4*t6*t7*t9+t2^3*t3*t8*t9+
                n*t1*t2*t3*t6*t8*t9-n*t1*t2^2*t7*t8*t9-t1^2*t6*t7*t8*t9,
                s18->t12*t2^3*t3*t6+t11*t2^3*t4*t6+t10*t2^3*t5*t6-
                t1*t12*t2*t3*t6^2-t1*t11*t2*t4*t6^2-t1*t10*t2*t5*t6^2+
                t2*t3*t4*t5*t6^2+n*t2*t3*t4*t5*t6^2-t1*t12*t2^2*t6*t7-
                2*t2^2*t4*t5*t6*t7+t1^2*t12*t6^2*t7+t1*t4*t5*t6^2*t7-
                n*t1*t4*t5*t6^2*t7-t11*t2^4*t8+t1*t11*t2^2*t6*t8-t2^2*t3*t5*t6*t8-
                n*t2^2*t3*t5*t6*t8+t2^3*t5*t7*t8+n*t1*t2*t5*t6*t7*t8-t10*t2^4*t9+
                t1*t10*t2^2*t6*t9-t2^2*t3*t4*t6*t9-n*t2^2*t3*t4*t6*t9+
                t2^3*t4*t7*t9+n*t1*t2*t4*t6*t7*t9+n*t2^3*t3*t8*t9+
                t1*t2*t3*t6*t8*t9-n*t1*t2^2*t7*t8*t9-t1^2*t6*t7*t8*t9,
                s19->-(t12*t2^2*t3*t6^2)-t11*t2^2*t4*t6^2-t10*t2^2*t5*t6^2+
                t1*t12*t3*t6^3+t1*t11*t4*t6^3+t1*t10*t5*t6^3-t3*t4*t5*t6^3-
                n*t3*t4*t5*t6^3+t12*t2^3*t6*t7-t1*t12*t2*t6^2*t7+t2*t4*t5*t6^2*t7+
                n*t2*t4*t5*t6^2*t7+t11*t2^3*t6*t8-t1*t11*t2*t6^2*t8+
                t2*t3*t5*t6^2*t8+n*t2*t3*t5*t6^2*t8-n*t2^2*t5*t6*t7*t8-
                t1*t5*t6^2*t7*t8+t10*t2^3*t6*t9-t1*t10*t2*t6^2*t9+
                t2*t3*t4*t6^2*t9+n*t2*t3*t4*t6^2*t9-n*t2^2*t4*t6*t7*t9-
                t1*t4*t6^2*t7*t9-n*t2^2*t3*t6*t8*t9-t1*t3*t6^2*t8*t9-
                2*t2^3*t7*t8*t9+n*t2^3*t7*t8*t9+3*t1*t2*t6*t7*t8*t9},
                {t1->SP[p1,p1],t2->SP[p1,p2],t3->SP[p1,q1],t4->SP[p1,q2],
                t5->SP[p1,q3],t6->SP[p2,p2],t7->SP[p2,q1],t8->SP[p2,q2],
                t9->SP[p2,q3],t10->SP[q1,q2],t11->SP[q1,q3],t12->SP[q2,q3],
                v1->FV[p1,mu],v2->FV[p1,nu],v3->FV[p1,rho],v4->FV[p2,mu],
                v5->FV[p2,nu],v6->FV[p2,rho],m1->MT[mu,nu],m2->MT[mu,rho],
                m3->MT[nu,rho]}};
                scpexp[encli,n]
        ]
}
