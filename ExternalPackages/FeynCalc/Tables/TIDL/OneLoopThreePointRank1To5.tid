{
(* C_{mu} *)
tidl[{{q_,mu_}},{p_,k_},n_]/; Expand[ExpandScalarProduct[(Pair[Momentum[k, n],
        Momentum[p, n]]^2 - Pair[Momentum[k, n], Momentum[k, n]] Pair[Momentum[p, n],
        Momentum[p, n]])]] =!= 0 :> Block[{s1,s2,s3,t1,t2,t3,t4,t5,v1,v2,encli},
                encli=
        {-((s3*v1)/s1)+(s2*v2)/s1,{s1->t2^2-t1*t4,s2->t2*t3-t1*t5,
        s3->t3*t4-t2*t5},{t1->SP[k,k],t2->SP[k,p],t3->SP[k,q],
        t4->SP[p,p],t5->SP[p,q],v1->FV[k,mu],v2->FV[p,mu]}};
                scpexp[encli,n]
        ]
,
(* C_{mu,nu} *)
tidl[{{q_,mu_},{q_,nu_}},{p_,k_},n_]/; Expand[ExpandScalarProduct[(Pair[Momentum[k, n],
        Momentum[p, n]]^2 - Pair[Momentum[k, n], Momentum[k, n]] Pair[Momentum[p, n],
        Momentum[p, n]])]] =!= 0 :> Block[{s1,s2,s3,s4,s5,s6,t1,t2,t3,t4,
        t5,t6,v1,v2,v3,v4,m1,encli},
                encli=
        {-((m1*s3)/(s1*s2))+(s6*v1*v2)/(s1*s2^2)-(s5*v2*v3)/(s1*s2^2)-
        (s5*v1*v4)/(s1*s2^2)+(s4*v3*v4)/(s1*s2^2),
        {s1->2-n,s2->t2^2-t1*t4,s3->t3^2*t4-2*t2*t3*t5+t1*t5^2+
        t2^2*t6-t1*t4*t6,s4->2*t2^2*t3^2-n*t2^2*t3^2-t1*t3^2*t4-
        2*t1*t2*t3*t5+2*n*t1*t2*t3*t5+t1^2*t5^2-n*t1^2*t5^2-t1*t2^2*t6+
        t1^2*t4*t6,s5->t2*t3^2*t4-n*t2*t3^2*t4+n*t2^2*t3*t5-
        2*t1*t3*t4*t5+n*t1*t3*t4*t5+t1*t2*t5^2-n*t1*t2*t5^2-t2^3*t6+
        t1*t2*t4*t6,s6->t3^2*t4^2-n*t3^2*t4^2-2*t2*t3*t4*t5+
        2*n*t2*t3*t4*t5+2*t2^2*t5^2-n*t2^2*t5^2-t1*t4*t5^2-t2^2*t4*t6+
        t1*t4^2*t6},{t1->SP[k,k],t2->SP[k,p],t3->SP[k,q],
        t4->SP[p,p],t5->SP[p,q],t6->SP[q,q],v1->FV[k,mu],
        v2->FV[k,nu],v3->FV[p,mu],v4->FV[p,nu],m1->MT[mu,nu]}};
                scpexp[encli,n]
        ]
,
(* C_{mu,nu,rho} *)
tidl[{{q_, mu_}, {q_, nu_}, {q_, rho_}}, {p1_, p2_},n_ ]/;
Expand[ExpandScalarProduct[(Pair[Momentum[p1, n], Momentum[p2, n]]^2 -
Pair[Momentum[p1, n], Momentum[p1, n]] Pair[Momentum[p2, n], Momentum[p2, n]])]] =!= 0 :>
        Block[{s1,s2,s3,s4,s5,s6,s7,s8,s9,t1,t2,t3,t4,t5,t6,v1,v2,v3,v4,v5,v6,m1,m2,m3,encli},
                encli=
                {(m3*s4*s5*v1)/(s1*s2^2)+(m2*s4*s5*v2)/(s1*s2^2)+
                (m1*s4*s5*v3)/(s1*s2^2)+(s5*s7*v1*v2*v3)/(s1*s2^3)-
                (m3*s3*s4*v4)/(s1*s2^2)-(s9*v2*v3*v4)/(s1*s2^3)-
                (m2*s3*s4*v5)/(s1*s2^2)-(s9*v1*v3*v5)/(s1*s2^3)+
                (s8*v3*v4*v5)/(s1*s2^3)-(m1*s3*s4*v6)/(s1*s2^2)-
                (s9*v1*v2*v6)/(s1*s2^3)+(s8*v2*v4*v6)/(s1*s2^3)+
                (s8*v1*v5*v6)/(s1*s2^3)+(s3*s6*v4*v5*v6)/(s1*s2^3),
                {s1->2-n,s2->t2^2-t1*t4,s3->t2*t3-t1*t5,
                s4->t3^2*t4-2*t2*t3*t5+t1*t5^2+t2^2*t6-t1*t4*t6,
                s5->t3*t4-t2*t5,s6->2*t2^2*t3^2-n*t2^2*t3^2-3*t1*t3^2*t4+
                2*t1*t2*t3*t5+2*n*t1*t2*t3*t5-t1^2*t5^2-n*t1^2*t5^2-
                3*t1*t2^2*t6+3*t1^2*t4*t6,s7->t3^2*t4^2+n*t3^2*t4^2-
                2*t2*t3*t4*t5-2*n*t2*t3*t4*t5-2*t2^2*t5^2+n*t2^2*t5^2+
                3*t1*t4*t5^2+3*t2^2*t4*t6-3*t1*t4^2*t6,
                s8->n*t2^2*t3^3*t4+t1*t3^3*t4^2-2*t2^3*t3^2*t5-n*t2^3*t3^2*t5-
                t1*t2*t3^2*t4*t5-2*n*t1*t2*t3^2*t4*t5+4*t1*t2^2*t3*t5^2+
                2*n*t1*t2^2*t3*t5^2-t1^2*t3*t4*t5^2+n*t1^2*t3*t4*t5^2-
                t1^2*t2*t5^3-n*t1^2*t2*t5^3+2*t2^4*t3*t6-t1*t2^2*t3*t4*t6-
                t1^2*t3*t4^2*t6-3*t1*t2^3*t5*t6+3*t1^2*t2*t4*t5*t6,
                s9->t2*t3^3*t4^2+n*t2*t3^3*t4^2-4*t2^2*t3^2*t4*t5-
                2*n*t2^2*t3^2*t4*t5+t1*t3^2*t4^2*t5-n*t1*t3^2*t4^2*t5+
                2*t2^3*t3*t5^2+n*t2^3*t3*t5^2+t1*t2*t3*t4*t5^2+
                2*n*t1*t2*t3*t4*t5^2-n*t1*t2^2*t5^3-t1^2*t4*t5^3+3*t2^3*t3*t4*t6-
                3*t1*t2*t3*t4^2*t6-2*t2^4*t5*t6+t1*t2^2*t4*t5*t6+t1^2*t4^2*t5*t6},
                {t1->SP[p1,p1],t2->SP[p1,p2],t3->SP[p1,q],t4->SP[p2,p2],
                t5->SP[p2,q],t6->SP[q,q],v1->FV[p1,mu],v2->FV[p1,nu],
                v3->FV[p1,rho],v4->FV[p2,mu],v5->FV[p2,nu],v6->FV[p2,rho],
                m1->MT[mu,nu],m2->MT[mu,rho],m3->MT[nu,rho]}};
                scpexp[encli,n]
        ],
(* C_{mu,nu,rho,sigma} *)
tidl[{{q_, mu_}, {q_, nu_}, {q_, rho_}, {q_, si_}}, {p1_, p2_},n_]/;
Expand[ExpandScalarProduct[(Pair[Momentum[p1, n], Momentum[p2, n]]^2 -
Pair[Momentum[p1, n], Momentum[p1, n]] Pair[Momentum[p2, n], Momentum[p2, n]])]] =!= 0 :>
        Block[{s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,t1,t2,t3,t4,t5,t6,v1,v2,v3,v4,
                v5,v6,v7,v8,m1,m2,m3,m4,m5,m6,encli},
                encli=
                {(m3*m4*s3^2)/(n*s1*s2^2)+(m2*m5*s3^2)/(n*s1*s2^2)+
                (m1*m6*s3^2)/(n*s1*s2^2)+(m6*s3*s6*v1*v2)/(n*s1*s2^3)+
                (m5*s3*s6*v1*v3)/(n*s1*s2^3)+(m3*s3*s6*v2*v3)/(n*s1*s2^3)+
                (m4*s3*s6*v1*v4)/(n*s1*s2^3)+(m2*s3*s6*v2*v4)/(n*s1*s2^3)+
                (m1*s3*s6*v3*v4)/(n*s1*s2^3)+(s11*v1*v2*v3*v4)/(n*s1*s2^4)+
                (m6*s3*s5*v2*v5)/(n*s1*s2^3)+(m5*s3*s5*v3*v5)/(n*s1*s2^3)+
                (m4*s3*s5*v4*v5)/(n*s1*s2^3)+(s10*v2*v3*v4*v5)/(n*s1*s2^4)+
                (m6*s3*s5*v1*v6)/(n*s1*s2^3)+(m3*s3*s5*v3*v6)/(n*s1*s2^3)+
                (m2*s3*s5*v4*v6)/(n*s1*s2^3)+(s10*v1*v3*v4*v6)/(n*s1*s2^4)+
                (m6*s3*s4*v5*v6)/(n*s1*s2^3)+(s9*v3*v4*v5*v6)/(n*s1*s2^4)+
                (m5*s3*s5*v1*v7)/(n*s1*s2^3)+(m3*s3*s5*v2*v7)/(n*s1*s2^3)+
                (m1*s3*s5*v4*v7)/(n*s1*s2^3)+(s10*v1*v2*v4*v7)/(n*s1*s2^4)+
                (m5*s3*s4*v5*v7)/(n*s1*s2^3)+(s9*v2*v4*v5*v7)/(n*s1*s2^4)+
                (m3*s3*s4*v6*v7)/(n*s1*s2^3)+(s9*v1*v4*v6*v7)/(n*s1*s2^4)+
                (s8*v4*v5*v6*v7)/(n*s1*s2^4)+(m4*s3*s5*v1*v8)/(n*s1*s2^3)+
                (m2*s3*s5*v2*v8)/(n*s1*s2^3)+(m1*s3*s5*v3*v8)/(n*s1*s2^3)+
                (s10*v1*v2*v3*v8)/(n*s1*s2^4)+(m4*s3*s4*v5*v8)/(n*s1*s2^3)+
                (s9*v2*v3*v5*v8)/(n*s1*s2^4)+(m2*s3*s4*v6*v8)/(n*s1*s2^3)+
                (s9*v1*v3*v6*v8)/(n*s1*s2^4)+(s8*v3*v5*v6*v8)/(n*s1*s2^4)+
                (m1*s3*s4*v7*v8)/(n*s1*s2^3)+(s9*v1*v2*v7*v8)/(n*s1*s2^4)+
                (s8*v2*v5*v7*v8)/(n*s1*s2^4)+(s8*v1*v6*v7*v8)/(n*s1*s2^4)+
                (s7*v5*v6*v7*v8)/(n*s1*s2^4),{s1->-2+n,s2->t2^2-t1*t4,
                s3->t3^2*t4-2*t2*t3*t5+t1*t5^2+t2^2*t6-t1*t4*t6,
                s4->n*t2^2*t3^2+t1*t3^2*t4-2*t1*t2*t3*t5-2*n*t1*t2*t3*t5+
                t1^2*t5^2+n*t1^2*t5^2+t1*t2^2*t6-t1^2*t4*t6,
                s5->-(t2*t3^2*t4)-n*t2*t3^2*t4+2*t2^2*t3*t5+n*t2^2*t3*t5+
                n*t1*t3*t4*t5-t1*t2*t5^2-n*t1*t2*t5^2-t2^3*t6+t1*t2*t4*t6,
                s6->t3^2*t4^2+n*t3^2*t4^2-2*t2*t3*t4*t5-2*n*t2*t3*t4*t5+
                n*t2^2*t5^2+t1*t4*t5^2+t2^2*t4*t6-t1*t4^2*t6,
                s7->-2*n*t2^4*t3^4+n^2*t2^4*t3^4+6*n*t1*t2^2*t3^4*t4+
                3*t1^2*t3^4*t4^2-4*n*t1*t2^3*t3^3*t5-4*n^2*t1*t2^3*t3^3*t5-
                12*t1^2*t2*t3^3*t4*t5-12*n*t1^2*t2*t3^3*t4*t5+
                12*t1^2*t2^2*t3^2*t5^2+18*n*t1^2*t2^2*t3^2*t5^2+
                6*n^2*t1^2*t2^2*t3^2*t5^2+6*t1^3*t3^2*t4*t5^2+6*n*t1^3*t3^2*t4*t5^2-
                12*t1^3*t2*t3*t5^3-16*n*t1^3*t2*t3*t5^3-4*n^2*t1^3*t2*t3*t5^3+
                3*t1^4*t5^4+4*n*t1^4*t5^4+n^2*t1^4*t5^4+6*n*t1*t2^4*t3^2*t6+
                6*t1^2*t2^2*t3^2*t4*t6-6*n*t1^2*t2^2*t3^2*t4*t6-6*t1^3*t3^2*t4^2*t6-
                12*t1^2*t2^3*t3*t5*t6-12*n*t1^2*t2^3*t3*t5*t6+
                12*t1^3*t2*t3*t4*t5*t6+12*n*t1^3*t2*t3*t4*t5*t6+6*t1^3*t2^2*t5^2*t6+
                6*n*t1^3*t2^2*t5^2*t6-6*t1^4*t4*t5^2*t6-6*n*t1^4*t4*t5^2*t6+
                3*t1^2*t2^4*t6^2-6*t1^3*t2^2*t4*t6^2+3*t1^4*t4^2*t6^2,
                s8->-(n*t2^3*t3^4*t4)-n^2*t2^3*t3^4*t4-3*t1*t2*t3^4*t4^2-
                3*n*t1*t2*t3^4*t4^2+4*n*t2^4*t3^3*t5+n^2*t2^4*t3^3*t5+
                12*t1*t2^2*t3^3*t4*t5+9*n*t1*t2^2*t3^3*t4*t5+
                3*n^2*t1*t2^2*t3^3*t4*t5+3*n*t1^2*t3^3*t4^2*t5-12*t1*t2^3*t3^2*t5^2-
                15*n*t1*t2^3*t3^2*t5^2-3*n^2*t1*t2^3*t3^2*t5^2-
                6*t1^2*t2*t3^2*t4*t5^2-9*n*t1^2*t2*t3^2*t4*t5^2-
                3*n^2*t1^2*t2*t3^2*t4*t5^2+12*t1^2*t2^2*t3*t5^3+
                15*n*t1^2*t2^2*t3*t5^3+3*n^2*t1^2*t2^2*t3*t5^3+n*t1^3*t3*t4*t5^3+
                n^2*t1^3*t3*t4*t5^3-3*t1^3*t2*t5^4-4*n*t1^3*t2*t5^4-
                n^2*t1^3*t2*t5^4-3*n*t2^5*t3^2*t6-6*t1*t2^3*t3^2*t4*t6+
                6*t1^2*t2*t3^2*t4^2*t6+3*n*t1^2*t2*t3^2*t4^2*t6+12*t1*t2^4*t3*t5*t6+
                9*n*t1*t2^4*t3*t5*t6-12*t1^2*t2^2*t3*t4*t5*t6-
                6*n*t1^2*t2^2*t3*t4*t5*t6-3*n*t1^3*t3*t4^2*t5*t6-
                6*t1^2*t2^3*t5^2*t6-6*n*t1^2*t2^3*t5^2*t6+6*t1^3*t2*t4*t5^2*t6+
                6*n*t1^3*t2*t4*t5^2*t6-3*t1*t2^5*t6^2+6*t1^2*t2^3*t4*t6^2-
                3*t1^3*t2*t4^2*t6^2,s9->2*t2^2*t3^4*t4^2+3*n*t2^2*t3^4*t4^2+
                n^2*t2^2*t3^4*t4^2+t1*t3^4*t4^3+n*t1*t3^4*t4^3-8*t2^3*t3^3*t4*t5-
                10*n*t2^3*t3^3*t4*t5-2*n^2*t2^3*t3^3*t4*t5-4*t1*t2*t3^3*t4^2*t5-
                6*n*t1*t2*t3^3*t4^2*t5-2*n^2*t1*t2*t3^3*t4^2*t5+8*t2^4*t3^2*t5^2+
                6*n*t2^4*t3^2*t5^2+n^2*t2^4*t3^2*t5^2+8*t1*t2^2*t3^2*t4*t5^2+
                18*n*t1*t2^2*t3^2*t4*t5^2+4*n^2*t1*t2^2*t3^2*t4*t5^2+
                2*t1^2*t3^2*t4^2*t5^2+n^2*t1^2*t3^2*t4^2*t5^2-8*t1*t2^3*t3*t5^3-
                10*n*t1*t2^3*t3*t5^3-2*n^2*t1*t2^3*t3*t5^3-4*t1^2*t2*t3*t4*t5^3-
                6*n*t1^2*t2*t3*t4*t5^3-2*n^2*t1^2*t2*t3*t4*t5^3+2*t1^2*t2^2*t5^4+
                3*n*t1^2*t2^2*t5^4+n^2*t1^2*t2^2*t5^4+t1^3*t4*t5^4+n*t1^3*t4*t5^4+
                4*t2^4*t3^2*t4*t6+5*n*t2^4*t3^2*t4*t6-2*t1*t2^2*t3^2*t4^2*t6-
                4*n*t1*t2^2*t3^2*t4^2*t6-2*t1^2*t3^2*t4^3*t6-n*t1^2*t3^2*t4^3*t6-
                8*t2^5*t3*t5*t6-4*n*t2^5*t3*t5*t6+4*t1*t2^3*t3*t4*t5*t6-
                4*n*t1*t2^3*t3*t4*t5*t6+4*t1^2*t2*t3*t4^2*t5*t6+
                8*n*t1^2*t2*t3*t4^2*t5*t6+4*t1*t2^4*t5^2*t6+5*n*t1*t2^4*t5^2*t6-
                2*t1^2*t2^2*t4*t5^2*t6-4*n*t1^2*t2^2*t4*t5^2*t6-2*t1^3*t4^2*t5^2*t6-
                n*t1^3*t4^2*t5^2*t6+2*t2^6*t6^2-3*t1*t2^4*t4*t6^2+t1^3*t4^3*t6^2,
                s10->-3*t2*t3^4*t4^3-4*n*t2*t3^4*t4^3-n^2*t2*t3^4*t4^3+
                12*t2^2*t3^3*t4^2*t5+15*n*t2^2*t3^3*t4^2*t5+3*n^2*t2^2*t3^3*t4^2*t5+
                n*t1*t3^3*t4^3*t5+n^2*t1*t3^3*t4^3*t5-12*t2^3*t3^2*t4*t5^2-
                15*n*t2^3*t3^2*t4*t5^2-3*n^2*t2^3*t3^2*t4*t5^2-
                6*t1*t2*t3^2*t4^2*t5^2-9*n*t1*t2*t3^2*t4^2*t5^2-
                3*n^2*t1*t2*t3^2*t4^2*t5^2+4*n*t2^4*t3*t5^3+n^2*t2^4*t3*t5^3+
                12*t1*t2^2*t3*t4*t5^3+9*n*t1*t2^2*t3*t4*t5^3+
                3*n^2*t1*t2^2*t3*t4*t5^3+3*n*t1^2*t3*t4^2*t5^3-n*t1*t2^3*t5^4-
                n^2*t1*t2^3*t5^4-3*t1^2*t2*t4*t5^4-3*n*t1^2*t2*t4*t5^4-
                6*t2^3*t3^2*t4^2*t6-6*n*t2^3*t3^2*t4^2*t6+6*t1*t2*t3^2*t4^3*t6+
                6*n*t1*t2*t3^2*t4^3*t6+12*t2^4*t3*t4*t5*t6+9*n*t2^4*t3*t4*t5*t6-
                12*t1*t2^2*t3*t4^2*t5*t6-6*n*t1*t2^2*t3*t4^2*t5*t6-
                3*n*t1^2*t3*t4^3*t5*t6-3*n*t2^5*t5^2*t6-6*t1*t2^3*t4*t5^2*t6+
                6*t1^2*t2*t4^2*t5^2*t6+3*n*t1^2*t2*t4^2*t5^2*t6-3*t2^5*t4*t6^2+
                6*t1*t2^3*t4^2*t6^2-3*t1^2*t2*t4^3*t6^2,
                s11->3*t3^4*t4^4+4*n*t3^4*t4^4+n^2*t3^4*t4^4-12*t2*t3^3*t4^3*t5-
                16*n*t2*t3^3*t4^3*t5-4*n^2*t2*t3^3*t4^3*t5+12*t2^2*t3^2*t4^2*t5^2+
                18*n*t2^2*t3^2*t4^2*t5^2+6*n^2*t2^2*t3^2*t4^2*t5^2+
                6*t1*t3^2*t4^3*t5^2+6*n*t1*t3^2*t4^3*t5^2-4*n*t2^3*t3*t4*t5^3-
                4*n^2*t2^3*t3*t4*t5^3-12*t1*t2*t3*t4^2*t5^3-12*n*t1*t2*t3*t4^2*t5^3-
                2*n*t2^4*t5^4+n^2*t2^4*t5^4+6*n*t1*t2^2*t4*t5^4+3*t1^2*t4^2*t5^4+
                6*t2^2*t3^2*t4^3*t6+6*n*t2^2*t3^2*t4^3*t6-6*t1*t3^2*t4^4*t6-
                6*n*t1*t3^2*t4^4*t6-12*t2^3*t3*t4^2*t5*t6-12*n*t2^3*t3*t4^2*t5*t6+
                12*t1*t2*t3*t4^3*t5*t6+12*n*t1*t2*t3*t4^3*t5*t6+6*n*t2^4*t4*t5^2*t6+
                6*t1*t2^2*t4^2*t5^2*t6-6*n*t1*t2^2*t4^2*t5^2*t6-6*t1^2*t4^3*t5^2*t6+
                3*t2^4*t4^2*t6^2-6*t1*t2^2*t4^3*t6^2+3*t1^2*t4^4*t6^2},
                {t1->SP[p1,p1],t2->SP[p1,p2],t3->SP[p1,q],t4->SP[p2,p2],
                t5->SP[p2,q],t6->SP[q,q],v1->FV[p1,mu],v2->FV[p1,nu],
                v3->FV[p1,rho],v4->FV[p1,si],v5->FV[p2,mu],v6->FV[p2,nu],
                v7->FV[p2,rho],v8->FV[p2,si],m1->MT[mu,nu],m2->MT[mu,rho],
                m3->MT[mu,si],m4->MT[nu,rho],m5->MT[nu,si],m6->MT[rho,si]}};
                scpexp[encli,n]
        ],
(* C_{mu,nu,rho,sigma,delta} *)
tidl[{{q_, mu_}, {q_, nu_}, {q_, rho_}, {q_, si_}, {q_,de_}}, {p1_, p2_},n_]/;
Expand[ExpandScalarProduct[(Pair[Momentum[p1, n], Momentum[p2, n]]^2 -
Pair[Momentum[p1, n], Momentum[p1, n]] Pair[Momentum[p2, n], Momentum[p2, n]])]] =!= 0 :>
        Block[{s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,
                t1,t2,t3,t4,t5,t6,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,m1,m2,m3,m4,
                m5,m6,m7,m8,m9,m10,encli},
                encli=
                {(m10*m5*s2^2*s5*v1)/(n*s1^3*s3)+(m7*m8*s2^2*s5*v1)/(n*s1^3*s3)+
                (m6*m9*s2^2*s5*v1)/(n*s1^3*s3)-(m3*m5*s2^2*s4*v10)/(n*s1^3*s3)-
                (m2*m6*s2^2*s4*v10)/(n*s1^3*s3)-(m1*m8*s2^2*s4*v10)/(n*s1^3*s3)+
                (m10*m2*s2^2*s5*v2)/(n*s1^3*s3)+(m4*m8*s2^2*s5*v2)/(n*s1^3*s3)+
                (m3*m9*s2^2*s5*v2)/(n*s1^3*s3)-(m8*s2*s9*v1*v10*v2)/(n*s1^4*s3)+
                (m1*m10*s2^2*s5*v3)/(n*s1^3*s3)+(m4*m6*s2^2*s5*v3)/(n*s1^3*s3)+
                (m3*m7*s2^2*s5*v3)/(n*s1^3*s3)-(m6*s2*s9*v1*v10*v3)/(n*s1^4*s3)+
                (m10*s2*s5*s7*v1*v2*v3)/(n*s1^4*s3)-(m3*s2*s9*v10*v2*v3)/(n*s1^4*s3)+
                (m4*m5*s2^2*s5*v4)/(n*s1^3*s3)+(m2*m7*s2^2*s5*v4)/(n*s1^3*s3)+
                (m1*m9*s2^2*s5*v4)/(n*s1^3*s3)-(m5*s2*s9*v1*v10*v4)/(n*s1^4*s3)+
                (m9*s2*s5*s7*v1*v2*v4)/(n*s1^4*s3)-(m2*s2*s9*v10*v2*v4)/(n*s1^4*s3)+
                (m7*s2*s5*s7*v1*v3*v4)/(n*s1^4*s3)-(m1*s2*s9*v10*v3*v4)/(n*s1^4*s3)+
                (m4*s2*s5*s7*v2*v3*v4)/(n*s1^4*s3)-(s15*v1*v10*v2*v3*v4)/(n*s1^5*s3)+
                (m3*m5*s2^2*s5*v5)/(n*s1^3*s3)+(m2*m6*s2^2*s5*v5)/(n*s1^3*s3)+
                (m1*m8*s2^2*s5*v5)/(n*s1^3*s3)+(m8*s2*s5*s7*v1*v2*v5)/(n*s1^4*s3)+
                (m6*s2*s5*s7*v1*v3*v5)/(n*s1^4*s3)+(m3*s2*s5*s7*v2*v3*v5)/(n*s1^4*s3)+
                (m5*s2*s5*s7*v1*v4*v5)/(n*s1^4*s3)+(m2*s2*s5*s7*v2*v4*v5)/(n*s1^4*s3)+
                (m1*s2*s5*s7*v3*v4*v5)/(n*s1^4*s3)+(s11*s5*v1*v2*v3*v4*v5)/(n*s1^5*s3)-
                (m10*m5*s2^2*s4*v6)/(n*s1^3*s3)-(m7*m8*s2^2*s4*v6)/(n*s1^3*s3)-
                (m6*m9*s2^2*s4*v6)/(n*s1^3*s3)+(m8*s2*s8*v10*v2*v6)/(n*s1^4*s3)+
                (m6*s2*s8*v10*v3*v6)/(n*s1^4*s3)-(m10*s2*s9*v2*v3*v6)/(n*s1^4*s3)+
                (m5*s2*s8*v10*v4*v6)/(n*s1^4*s3)-(m9*s2*s9*v2*v4*v6)/(n*s1^4*s3)-
                (m7*s2*s9*v3*v4*v6)/(n*s1^4*s3)+(s14*v10*v2*v3*v4*v6)/(n*s1^5*s3)-
                (m8*s2*s9*v2*v5*v6)/(n*s1^4*s3)-(m6*s2*s9*v3*v5*v6)/(n*s1^4*s3)-
                (m5*s2*s9*v4*v5*v6)/(n*s1^4*s3)-(s15*v2*v3*v4*v5*v6)/(n*s1^5*s3)-
                (m10*m2*s2^2*s4*v7)/(n*s1^3*s3)-(m4*m8*s2^2*s4*v7)/(n*s1^3*s3)-
                (m3*m9*s2^2*s4*v7)/(n*s1^3*s3)+(m8*s2*s8*v1*v10*v7)/(n*s1^4*s3)-
                (m10*s2*s9*v1*v3*v7)/(n*s1^4*s3)+(m3*s2*s8*v10*v3*v7)/(n*s1^4*s3)-
                (m9*s2*s9*v1*v4*v7)/(n*s1^4*s3)+(m2*s2*s8*v10*v4*v7)/(n*s1^4*s3)-
                (m4*s2*s9*v3*v4*v7)/(n*s1^4*s3)+(s14*v1*v10*v3*v4*v7)/(n*s1^5*s3)-
                (m8*s2*s9*v1*v5*v7)/(n*s1^4*s3)-(m3*s2*s9*v3*v5*v7)/(n*s1^4*s3)-
                (m2*s2*s9*v4*v5*v7)/(n*s1^4*s3)-(s15*v1*v3*v4*v5*v7)/(n*s1^5*s3)-
                (m8*s2*s4*s6*v10*v6*v7)/(n*s1^4*s3)+(m10*s2*s8*v3*v6*v7)/(n*s1^4*s3)+
                (m9*s2*s8*v4*v6*v7)/(n*s1^4*s3)-(s13*v10*v3*v4*v6*v7)/(n*s1^5*s3)+
                (m8*s2*s8*v5*v6*v7)/(n*s1^4*s3)+(s14*v3*v4*v5*v6*v7)/(n*s1^5*s3)-
                (m1*m10*s2^2*s4*v8)/(n*s1^3*s3)-(m4*m6*s2^2*s4*v8)/(n*s1^3*s3)-
                (m3*m7*s2^2*s4*v8)/(n*s1^3*s3)+(m6*s2*s8*v1*v10*v8)/(n*s1^4*s3)-
                (m10*s2*s9*v1*v2*v8)/(n*s1^4*s3)+(m3*s2*s8*v10*v2*v8)/(n*s1^4*s3)-
                (m7*s2*s9*v1*v4*v8)/(n*s1^4*s3)+(m1*s2*s8*v10*v4*v8)/(n*s1^4*s3)-
                (m4*s2*s9*v2*v4*v8)/(n*s1^4*s3)+(s14*v1*v10*v2*v4*v8)/(n*s1^5*s3)-
                (m6*s2*s9*v1*v5*v8)/(n*s1^4*s3)-(m3*s2*s9*v2*v5*v8)/(n*s1^4*s3)-
                (m1*s2*s9*v4*v5*v8)/(n*s1^4*s3)-(s15*v1*v2*v4*v5*v8)/(n*s1^5*s3)-
                (m6*s2*s4*s6*v10*v6*v8)/(n*s1^4*s3)+(m10*s2*s8*v2*v6*v8)/(n*s1^4*s3)+
                (m7*s2*s8*v4*v6*v8)/(n*s1^4*s3)-(s13*v10*v2*v4*v6*v8)/(n*s1^5*s3)+
                (m6*s2*s8*v5*v6*v8)/(n*s1^4*s3)+(s14*v2*v4*v5*v6*v8)/(n*s1^5*s3)+
                (m10*s2*s8*v1*v7*v8)/(n*s1^4*s3)-(m3*s2*s4*s6*v10*v7*v8)/(n*s1^4*s3)+
                (m4*s2*s8*v4*v7*v8)/(n*s1^4*s3)-(s13*v1*v10*v4*v7*v8)/(n*s1^5*s3)+
                (m3*s2*s8*v5*v7*v8)/(n*s1^4*s3)+(s14*v1*v4*v5*v7*v8)/(n*s1^5*s3)-
                (m10*s2*s4*s6*v6*v7*v8)/(n*s1^4*s3)+(s12*v10*v4*v6*v7*v8)/(n*s1^5*s3)-
                (s13*v4*v5*v6*v7*v8)/(n*s1^5*s3)-(m4*m5*s2^2*s4*v9)/(n*s1^3*s3)-
                (m2*m7*s2^2*s4*v9)/(n*s1^3*s3)-(m1*m9*s2^2*s4*v9)/(n*s1^3*s3)+
                (m5*s2*s8*v1*v10*v9)/(n*s1^4*s3)-(m9*s2*s9*v1*v2*v9)/(n*s1^4*s3)+
                (m2*s2*s8*v10*v2*v9)/(n*s1^4*s3)-(m7*s2*s9*v1*v3*v9)/(n*s1^4*s3)+
                (m1*s2*s8*v10*v3*v9)/(n*s1^4*s3)-(m4*s2*s9*v2*v3*v9)/(n*s1^4*s3)+
                (s14*v1*v10*v2*v3*v9)/(n*s1^5*s3)-(m5*s2*s9*v1*v5*v9)/(n*s1^4*s3)-
                (m2*s2*s9*v2*v5*v9)/(n*s1^4*s3)-(m1*s2*s9*v3*v5*v9)/(n*s1^4*s3)-
                (s15*v1*v2*v3*v5*v9)/(n*s1^5*s3)-(m5*s2*s4*s6*v10*v6*v9)/(n*s1^4*s3)+
                (m9*s2*s8*v2*v6*v9)/(n*s1^4*s3)+(m7*s2*s8*v3*v6*v9)/(n*s1^4*s3)-
                (s13*v10*v2*v3*v6*v9)/(n*s1^5*s3)+(m5*s2*s8*v5*v6*v9)/(n*s1^4*s3)+
                (s14*v2*v3*v5*v6*v9)/(n*s1^5*s3)+(m9*s2*s8*v1*v7*v9)/(n*s1^4*s3)-
                (m2*s2*s4*s6*v10*v7*v9)/(n*s1^4*s3)+(m4*s2*s8*v3*v7*v9)/(n*s1^4*s3)-
                (s13*v1*v10*v3*v7*v9)/(n*s1^5*s3)+(m2*s2*s8*v5*v7*v9)/(n*s1^4*s3)+
                (s14*v1*v3*v5*v7*v9)/(n*s1^5*s3)-(m9*s2*s4*s6*v6*v7*v9)/(n*s1^4*s3)+
                (s12*v10*v3*v6*v7*v9)/(n*s1^5*s3)-(s13*v3*v5*v6*v7*v9)/(n*s1^5*s3)+
                (m7*s2*s8*v1*v8*v9)/(n*s1^4*s3)-(m1*s2*s4*s6*v10*v8*v9)/(n*s1^4*s3)+
                (m4*s2*s8*v2*v8*v9)/(n*s1^4*s3)-(s13*v1*v10*v2*v8*v9)/(n*s1^5*s3)+
                (m1*s2*s8*v5*v8*v9)/(n*s1^4*s3)+(s14*v1*v2*v5*v8*v9)/(n*s1^5*s3)-
                (m7*s2*s4*s6*v6*v8*v9)/(n*s1^4*s3)+(s12*v10*v2*v6*v8*v9)/(n*s1^5*s3)-
                (s13*v2*v5*v6*v8*v9)/(n*s1^5*s3)-(m4*s2*s4*s6*v7*v8*v9)/(n*s1^4*s3)+
                (s12*v1*v10*v7*v8*v9)/(n*s1^5*s3)-(s13*v1*v5*v7*v8*v9)/(n*s1^5*s3)+
                (s10*s4*v10*v6*v7*v8*v9)/(n*s1^5*s3)+(s12*v5*v6*v7*v8*v9)/(n*s1^5*s3),
                {s1->t2^2-t1*t4,s2->t3^2*t4-2*t2*t3*t5+t1*t5^2+t2^2*t6-
                t1*t4*t6,s3->2-n,s4->t2*t3-t1*t5,s5->t3*t4-t2*t5,
                s6->n*t2^2*t3^2+3*t1*t3^2*t4-6*t1*t2*t3*t5-2*n*t1*t2*t3*t5+
                3*t1^2*t5^2+n*t1^2*t5^2+3*t1*t2^2*t6-3*t1^2*t4*t6,
                s7->3*t3^2*t4^2+n*t3^2*t4^2-6*t2*t3*t4*t5-2*n*t2*t3*t4*t5+
                n*t2^2*t5^2+3*t1*t4*t5^2+3*t2^2*t4*t6-3*t1*t4^2*t6,
                s8->2*t2^2*t3^3*t4+n*t2^2*t3^3*t4+t1*t3^3*t4^2-4*t2^3*t3^2*t5-
                n*t2^3*t3^2*t5-5*t1*t2*t3^2*t4*t5-2*n*t1*t2*t3^2*t4*t5+
                8*t1*t2^2*t3*t5^2+2*n*t1*t2^2*t3*t5^2+t1^2*t3*t4*t5^2+
                n*t1^2*t3*t4*t5^2-3*t1^2*t2*t5^3-n*t1^2*t2*t5^3+2*t2^4*t3*t6-
                t1*t2^2*t3*t4*t6-t1^2*t3*t4^2*t6-3*t1*t2^3*t5*t6+
                3*t1^2*t2*t4*t5*t6,s9->3*t2*t3^3*t4^2+n*t2*t3^3*t4^2-
                8*t2^2*t3^2*t4*t5-2*n*t2^2*t3^2*t4*t5-t1*t3^2*t4^2*t5-
                n*t1*t3^2*t4^2*t5+4*t2^3*t3*t5^2+n*t2^3*t3*t5^2+
                5*t1*t2*t3*t4*t5^2+2*n*t1*t2*t3*t4*t5^2-2*t1*t2^2*t5^3-
                n*t1*t2^2*t5^3-t1^2*t4*t5^3+3*t2^3*t3*t4*t6-3*t1*t2*t3*t4^2*t6-
                2*t2^4*t5*t6+t1*t2^2*t4*t5*t6+t1^2*t4^2*t5*t6,
                s10->2*n*t2^4*t3^4-n^2*t2^4*t3^4-10*n*t1*t2^2*t3^4*t4-
                15*t1^2*t3^4*t4^2+12*n*t1*t2^3*t3^3*t5+4*n^2*t1*t2^3*t3^3*t5+
                60*t1^2*t2*t3^3*t4*t5+20*n*t1^2*t2*t3^3*t4*t5-
                60*t1^2*t2^2*t3^2*t5^2-38*n*t1^2*t2^2*t3^2*t5^2-
                6*n^2*t1^2*t2^2*t3^2*t5^2-30*t1^3*t3^2*t4*t5^2-
                10*n*t1^3*t3^2*t4*t5^2+60*t1^3*t2*t3*t5^3+32*n*t1^3*t2*t3*t5^3+
                4*n^2*t1^3*t2*t3*t5^3-15*t1^4*t5^4-8*n*t1^4*t5^4-n^2*t1^4*t5^4-
                10*n*t1*t2^4*t3^2*t6-30*t1^2*t2^2*t3^2*t4*t6+
                10*n*t1^2*t2^2*t3^2*t4*t6+30*t1^3*t3^2*t4^2*t6+
                60*t1^2*t2^3*t3*t5*t6+20*n*t1^2*t2^3*t3*t5*t6-
                60*t1^3*t2*t3*t4*t5*t6-20*n*t1^3*t2*t3*t4*t5*t6-
                30*t1^3*t2^2*t5^2*t6-10*n*t1^3*t2^2*t5^2*t6+30*t1^4*t4*t5^2*t6+
                10*n*t1^4*t4*t5^2*t6-15*t1^2*t2^4*t6^2+30*t1^3*t2^2*t4*t6^2-
                15*t1^4*t4^2*t6^2,s11->15*t3^4*t4^4+8*n*t3^4*t4^4+n^2*t3^4*t4^4-
                60*t2*t3^3*t4^3*t5-32*n*t2*t3^3*t4^3*t5-4*n^2*t2*t3^3*t4^3*t5+
                60*t2^2*t3^2*t4^2*t5^2+38*n*t2^2*t3^2*t4^2*t5^2+
                6*n^2*t2^2*t3^2*t4^2*t5^2+30*t1*t3^2*t4^3*t5^2+
                10*n*t1*t3^2*t4^3*t5^2-12*n*t2^3*t3*t4*t5^3-4*n^2*t2^3*t3*t4*t5^3-
                60*t1*t2*t3*t4^2*t5^3-20*n*t1*t2*t3*t4^2*t5^3-2*n*t2^4*t5^4+
                n^2*t2^4*t5^4+10*n*t1*t2^2*t4*t5^4+15*t1^2*t4^2*t5^4+
                30*t2^2*t3^2*t4^3*t6+10*n*t2^2*t3^2*t4^3*t6-30*t1*t3^2*t4^4*t6-
                10*n*t1*t3^2*t4^4*t6-60*t2^3*t3*t4^2*t5*t6-20*n*t2^3*t3*t4^2*t5*t6+
                60*t1*t2*t3*t4^3*t5*t6+20*n*t1*t2*t3*t4^3*t5*t6+
                10*n*t2^4*t4*t5^2*t6+30*t1*t2^2*t4^2*t5^2*t6-
                10*n*t1*t2^2*t4^2*t5^2*t6-30*t1^2*t4^3*t5^2*t6+15*t2^4*t4^2*t6^2-
                30*t1*t2^2*t4^3*t6^2+15*t1^2*t4^4*t6^2,
                s12->2*n*t2^4*t3^5*t4+n^2*t2^4*t3^5*t4+12*t1*t2^2*t3^5*t4^2+
                6*n*t1*t2^2*t3^5*t4^2+3*t1^2*t3^5*t4^3-6*n*t2^5*t3^4*t5-
                n^2*t2^5*t3^4*t5-48*t1*t2^3*t3^4*t4*t5-22*n*t1*t2^3*t3^4*t4*t5-
                4*n^2*t1*t2^3*t3^4*t4*t5-27*t1^2*t2*t3^4*t4^2*t5-
                12*n*t1^2*t2*t3^4*t4^2*t5+48*t1*t2^4*t3^3*t5^2+
                32*n*t1*t2^4*t3^3*t5^2+4*n^2*t1*t2^4*t3^3*t5^2+
                96*t1^2*t2^2*t3^3*t4*t5^2+42*n*t1^2*t2^2*t3^3*t4*t5^2+
                6*n^2*t1^2*t2^2*t3^3*t4*t5^2+6*t1^3*t3^3*t4^2*t5^2+
                6*n*t1^3*t3^3*t4^2*t5^2-108*t1^2*t2^3*t3^2*t5^3-
                54*n*t1^2*t2^3*t3^2*t5^3-6*n^2*t1^2*t2^3*t3^2*t5^3-
                42*t1^3*t2*t3^2*t4*t5^3-26*n*t1^3*t2*t3^2*t4*t5^3-
                4*n^2*t1^3*t2*t3^2*t4*t5^3+72*t1^3*t2^2*t3*t5^4+
                36*n*t1^3*t2^2*t3*t5^4+4*n^2*t1^3*t2^2*t3*t5^4+3*t1^4*t3*t4*t5^4+
                4*n*t1^4*t3*t4*t5^4+n^2*t1^4*t3*t4*t5^4-15*t1^4*t2*t5^5-
                8*n*t1^4*t2*t5^5-n^2*t1^4*t2*t5^5+4*n*t2^6*t3^3*t6+
                24*t1*t2^4*t3^3*t4*t6+2*n*t1*t2^4*t3^3*t4*t6-
                18*t1^2*t2^2*t3^3*t4^2*t6-6*n*t1^2*t2^2*t3^3*t4^2*t6-
                6*t1^3*t3^3*t4^3*t6-48*t1*t2^5*t3^2*t5*t6-18*n*t1*t2^5*t3^2*t5*t6+
                6*t1^2*t2^3*t3^2*t4*t5*t6+6*n*t1^2*t2^3*t3^2*t4*t5*t6+
                42*t1^3*t2*t3^2*t4^2*t5*t6+12*n*t1^3*t2*t3^2*t4^2*t5*t6+
                84*t1^2*t2^4*t3*t5^2*t6+24*n*t1^2*t2^4*t3*t5^2*t6-
                78*t1^3*t2^2*t3*t4*t5^2*t6-18*n*t1^3*t2^2*t3*t4*t5^2*t6-
                6*t1^4*t3*t4^2*t5^2*t6-6*n*t1^4*t3*t4^2*t5^2*t6-
                30*t1^3*t2^3*t5^3*t6-10*n*t1^3*t2^3*t5^3*t6+30*t1^4*t2*t4*t5^3*t6+
                10*n*t1^4*t2*t4*t5^3*t6+12*t1*t2^6*t3*t6^2-21*t1^2*t2^4*t3*t4*t6^2+
                6*t1^3*t2^2*t3*t4^2*t6^2+3*t1^4*t3*t4^3*t6^2-15*t1^2*t2^5*t5*t6^2+
                30*t1^3*t2^3*t4*t5*t6^2-15*t1^4*t2*t4^2*t5*t6^2,
                s13->6*t2^3*t3^5*t4^2+5*n*t2^3*t3^5*t4^2+n^2*t2^3*t3^5*t4^2+
                9*t1*t2*t3^5*t4^3+3*n*t1*t2*t3^5*t4^3-24*t2^4*t3^4*t4*t5-
                16*n*t2^4*t3^4*t4*t5-2*n^2*t2^4*t3^4*t4*t5-48*t1*t2^2*t3^4*t4^2*t5-
                21*n*t1*t2^2*t3^4*t4^2*t5-3*n^2*t1*t2^2*t3^4*t4^2*t5-
                3*t1^2*t3^4*t4^3*t5-3*n*t1^2*t3^4*t4^3*t5+24*t2^5*t3^3*t5^2+
                10*n*t2^5*t3^3*t5^2+n^2*t2^5*t3^3*t5^2+96*t1*t2^3*t3^3*t4*t5^2+
                52*n*t1*t2^3*t3^3*t4*t5^2+6*n^2*t1*t2^3*t3^3*t4*t5^2+
                30*t1^2*t2*t3^3*t4^2*t5^2+18*n*t1^2*t2*t3^3*t4^2*t5^2+
                3*n^2*t1^2*t2*t3^3*t4^2*t5^2-72*t1*t2^4*t3^2*t5^3-
                30*n*t1*t2^4*t3^2*t5^3-3*n^2*t1*t2^4*t3^2*t5^3-
                72*t1^2*t2^2*t3^2*t4*t5^3-48*n*t1^2*t2^2*t3^2*t4*t5^3-
                6*n^2*t1^2*t2^2*t3^2*t4*t5^3-6*t1^3*t3^2*t4^2*t5^3-
                2*n*t1^3*t3^2*t4^2*t5^3-n^2*t1^3*t3^2*t4^2*t5^3+
                54*t1^2*t2^3*t3*t5^4+27*n*t1^2*t2^3*t3*t5^4+3*n^2*t1^2*t2^3*t3*t5^4+
                21*t1^3*t2*t3*t4*t5^4+13*n*t1^3*t2*t3*t4*t5^4+
                2*n^2*t1^3*t2*t3*t4*t5^4-12*t1^3*t2^2*t5^5-7*n*t1^3*t2^2*t5^5-
                n^2*t1^3*t2^2*t5^5-3*t1^4*t4*t5^5-n*t1^4*t4*t5^5+
                12*t2^5*t3^3*t4*t6+7*n*t2^5*t3^3*t4*t6+6*t1*t2^3*t3^3*t4^2*t6-
                4*n*t1*t2^3*t3^3*t4^2*t6-18*t1^2*t2*t3^3*t4^3*t6-
                3*n*t1^2*t2*t3^3*t4^3*t6-24*t2^6*t3^2*t5*t6-6*n*t2^6*t3^2*t5*t6-
                36*t1*t2^4*t3^2*t4*t5*t6-15*n*t1*t2^4*t3^2*t4*t5*t6+
                54*t1^2*t2^2*t3^2*t4^2*t5*t6+18*n*t1^2*t2^2*t3^2*t4^2*t5*t6+
                6*t1^3*t3^2*t4^3*t5*t6+3*n*t1^3*t3^2*t4^3*t5*t6+
                60*t1*t2^5*t3*t5^2*t6+15*n*t1*t2^5*t3*t5^2*t6-
                30*t1^2*t2^3*t3*t4*t5^2*t6-30*t1^3*t2*t3*t4^2*t5^2*t6-
                15*n*t1^3*t2*t3*t4^2*t5^2*t6-24*t1^2*t2^4*t5^3*t6-
                9*n*t1^2*t2^4*t5^3*t6+18*t1^3*t2^2*t4*t5^3*t6+
                8*n*t1^3*t2^2*t4*t5^3*t6+6*t1^4*t4^2*t5^3*t6+n*t1^4*t4^2*t5^3*t6+
                6*t2^7*t3*t6^2-3*t1*t2^5*t3*t4*t6^2-12*t1^2*t2^3*t3*t4^2*t6^2+
                9*t1^3*t2*t3*t4^3*t6^2-12*t1*t2^6*t5*t6^2+21*t1^2*t2^4*t4*t5*t6^2-
                6*t1^3*t2^2*t4^2*t5*t6^2-3*t1^4*t4^3*t5*t6^2,
                s14->12*t2^2*t3^5*t4^3+7*n*t2^2*t3^5*t4^3+n^2*t2^2*t3^5*t4^3+
                3*t1*t3^5*t4^4+n*t1*t3^5*t4^4-54*t2^3*t3^4*t4^2*t5-
                27*n*t2^3*t3^4*t4^2*t5-3*n^2*t2^3*t3^4*t4^2*t5-
                21*t1*t2*t3^4*t4^3*t5-13*n*t1*t2*t3^4*t4^3*t5-
                2*n^2*t1*t2*t3^4*t4^3*t5+72*t2^4*t3^3*t4*t5^2+
                30*n*t2^4*t3^3*t4*t5^2+3*n^2*t2^4*t3^3*t4*t5^2+
                72*t1*t2^2*t3^3*t4^2*t5^2+48*n*t1*t2^2*t3^3*t4^2*t5^2+
                6*n^2*t1*t2^2*t3^3*t4^2*t5^2+6*t1^2*t3^3*t4^3*t5^2+
                2*n*t1^2*t3^3*t4^3*t5^2+n^2*t1^2*t3^3*t4^3*t5^2-24*t2^5*t3^2*t5^3-
                10*n*t2^5*t3^2*t5^3-n^2*t2^5*t3^2*t5^3-96*t1*t2^3*t3^2*t4*t5^3-
                52*n*t1*t2^3*t3^2*t4*t5^3-6*n^2*t1*t2^3*t3^2*t4*t5^3-
                30*t1^2*t2*t3^2*t4^2*t5^3-18*n*t1^2*t2*t3^2*t4^2*t5^3-
                3*n^2*t1^2*t2*t3^2*t4^2*t5^3+24*t1*t2^4*t3*t5^4+
                16*n*t1*t2^4*t3*t5^4+2*n^2*t1*t2^4*t3*t5^4+48*t1^2*t2^2*t3*t4*t5^4+
                21*n*t1^2*t2^2*t3*t4*t5^4+3*n^2*t1^2*t2^2*t3*t4*t5^4+
                3*t1^3*t3*t4^2*t5^4+3*n*t1^3*t3*t4^2*t5^4-6*t1^2*t2^3*t5^5-
                5*n*t1^2*t2^3*t5^5-n^2*t1^2*t2^3*t5^5-9*t1^3*t2*t4*t5^5-
                3*n*t1^3*t2*t4*t5^5+24*t2^4*t3^3*t4^2*t6+9*n*t2^4*t3^3*t4^2*t6-
                18*t1*t2^2*t3^3*t4^3*t6-8*n*t1*t2^2*t3^3*t4^3*t6-
                6*t1^2*t3^3*t4^4*t6-n*t1^2*t3^3*t4^4*t6-60*t2^5*t3^2*t4*t5*t6-
                15*n*t2^5*t3^2*t4*t5*t6+30*t1*t2^3*t3^2*t4^2*t5*t6+
                30*t1^2*t2*t3^2*t4^3*t5*t6+15*n*t1^2*t2*t3^2*t4^3*t5*t6+
                24*t2^6*t3*t5^2*t6+6*n*t2^6*t3*t5^2*t6+36*t1*t2^4*t3*t4*t5^2*t6+
                15*n*t1*t2^4*t3*t4*t5^2*t6-54*t1^2*t2^2*t3*t4^2*t5^2*t6-
                18*n*t1^2*t2^2*t3*t4^2*t5^2*t6-6*t1^3*t3*t4^3*t5^2*t6-
                3*n*t1^3*t3*t4^3*t5^2*t6-12*t1*t2^5*t5^3*t6-7*n*t1*t2^5*t5^3*t6-
                6*t1^2*t2^3*t4*t5^3*t6+4*n*t1^2*t2^3*t4*t5^3*t6+
                18*t1^3*t2*t4^2*t5^3*t6+3*n*t1^3*t2*t4^2*t5^3*t6+12*t2^6*t3*t4*t6^2-
                21*t1*t2^4*t3*t4^2*t6^2+6*t1^2*t2^2*t3*t4^3*t6^2+
                3*t1^3*t3*t4^4*t6^2-6*t2^7*t5*t6^2+3*t1*t2^5*t4*t5*t6^2+
                12*t1^2*t2^3*t4^2*t5*t6^2-9*t1^3*t2*t4^3*t5*t6^2,
                s15->15*t2*t3^5*t4^4+8*n*t2*t3^5*t4^4+n^2*t2*t3^5*t4^4-
                72*t2^2*t3^4*t4^3*t5-36*n*t2^2*t3^4*t4^3*t5-4*n^2*t2^2*t3^4*t4^3*t5-
                3*t1*t3^4*t4^4*t5-4*n*t1*t3^4*t4^4*t5-n^2*t1*t3^4*t4^4*t5+
                108*t2^3*t3^3*t4^2*t5^2+54*n*t2^3*t3^3*t4^2*t5^2+
                6*n^2*t2^3*t3^3*t4^2*t5^2+42*t1*t2*t3^3*t4^3*t5^2+
                26*n*t1*t2*t3^3*t4^3*t5^2+4*n^2*t1*t2*t3^3*t4^3*t5^2-
                48*t2^4*t3^2*t4*t5^3-32*n*t2^4*t3^2*t4*t5^3-4*n^2*t2^4*t3^2*t4*t5^3-
                96*t1*t2^2*t3^2*t4^2*t5^3-42*n*t1*t2^2*t3^2*t4^2*t5^3-
                6*n^2*t1*t2^2*t3^2*t4^2*t5^3-6*t1^2*t3^2*t4^3*t5^3-
                6*n*t1^2*t3^2*t4^3*t5^3+6*n*t2^5*t3*t5^4+n^2*t2^5*t3*t5^4+
                48*t1*t2^3*t3*t4*t5^4+22*n*t1*t2^3*t3*t4*t5^4+
                4*n^2*t1*t2^3*t3*t4*t5^4+27*t1^2*t2*t3*t4^2*t5^4+
                12*n*t1^2*t2*t3*t4^2*t5^4-2*n*t1*t2^4*t5^5-n^2*t1*t2^4*t5^5-
                12*t1^2*t2^2*t4*t5^5-6*n*t1^2*t2^2*t4*t5^5-3*t1^3*t4^2*t5^5+
                30*t2^3*t3^3*t4^3*t6+10*n*t2^3*t3^3*t4^3*t6-30*t1*t2*t3^3*t4^4*t6-
                10*n*t1*t2*t3^3*t4^4*t6-84*t2^4*t3^2*t4^2*t5*t6-
                24*n*t2^4*t3^2*t4^2*t5*t6+78*t1*t2^2*t3^2*t4^3*t5*t6+
                18*n*t1*t2^2*t3^2*t4^3*t5*t6+6*t1^2*t3^2*t4^4*t5*t6+
                6*n*t1^2*t3^2*t4^4*t5*t6+48*t2^5*t3*t4*t5^2*t6+
                18*n*t2^5*t3*t4*t5^2*t6-6*t1*t2^3*t3*t4^2*t5^2*t6-
                6*n*t1*t2^3*t3*t4^2*t5^2*t6-42*t1^2*t2*t3*t4^3*t5^2*t6-
                12*n*t1^2*t2*t3*t4^3*t5^2*t6-4*n*t2^6*t5^3*t6-24*t1*t2^4*t4*t5^3*t6-
                2*n*t1*t2^4*t4*t5^3*t6+18*t1^2*t2^2*t4^2*t5^3*t6+
                6*n*t1^2*t2^2*t4^2*t5^3*t6+6*t1^3*t4^3*t5^3*t6+15*t2^5*t3*t4^2*t6^2-
                30*t1*t2^3*t3*t4^3*t6^2+15*t1^2*t2*t3*t4^4*t6^2-12*t2^6*t4*t5*t6^2+
                21*t1*t2^4*t4^2*t5*t6^2-6*t1^2*t2^2*t4^3*t5*t6^2-
                3*t1^3*t4^4*t5*t6^2},{t1->SP[p1,p1],t2->SP[p1,p2],
                t3->SP[p1,q],t4->SP[p2,p2],t5->SP[p2,q],t6->SP[q,q],
                v1->FV[p1,de],v2->FV[p1,mu],v3->FV[p1,nu],v4->FV[p1,rho],
                v5->FV[p1,si],v6->FV[p2,de],v7->FV[p2,mu],v8->FV[p2,nu],
                v9->FV[p2,rho],v10->FV[p2,si],m1->MT[de,mu],m2->MT[de,nu],
                m3->MT[de,rho],m4->MT[de,si],m5->MT[mu,nu],m6->MT[mu,rho],
                m7->MT[mu,si],m8->MT[nu,rho],m9->MT[nu,si],m10->MT[rho,si]}};
                scpexp[encli,n]
        ]
}
