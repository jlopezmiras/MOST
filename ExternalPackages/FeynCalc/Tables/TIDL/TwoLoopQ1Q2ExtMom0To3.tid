{
tidl[{{q1_,mu_},{q2_,nu_}},{},n_]/; q1=!=q2 :>
        ChangeDimension[ExpandScalarProduct[(MT[mu, nu] SP[q1, q2])/n],n],
tidl[{{q1_,mu_},{q2_,nu_}},{p_},n_]/; Pair[Momentum[p, n], Momentum[p, n]] =!= 0 && q1=!=q2 :>
        Block[{s1,s2,s3,t1,t2,t3,t4,v1,v2,m1,encli},
                encli=
                {(m1*s2)/(s1*t1)-(s3*v1*v2)/(s1*t1^2),{s1->1-n,s2->t2*t3-t1*t4,
                s3->n*t2*t3-t1*t4},{t1->SP[p,p],t2->SP[p,q1],t3->SP[p,q2],
                t4->SP[q1,q2],v1->FV[p,mu],v2->FV[p,nu],m1->MT[mu,nu]}};
                scpexp[encli,n]
        ],
tidl[{{q1_,mu_},{q2_,nu_}},{p_,k_},n_]/; Expand[ExpandScalarProduct[(Pair[Momentum[k, n],
        Momentum[p, n]]^2 - Pair[Momentum[k, n], Momentum[k, n]] Pair[Momentum[p, n],
        Momentum[p, n]])]] =!= 0 && q1=!=q2 :>
        Block[{s1,s2,s3,s4,s5,s6,s7,t1,t2,t3,
                t4,t5,t6,t7,t8,v1,v2,v3,v4,m1,encli},
                encli=
                {(m1*s3)/(s1*s2)+(s7*v1*v2)/(s1^2*s2)+(s5*v2*v3)/(s1^2*s2)+
                (s6*v1*v4)/(s1^2*s2)+(s4*v3*v4)/(s1^2*s2),
                {s1->t2^2-t1*t5,s2->-2+n,s3->t3*t4*t5-t2*t4*t6-t2*t3*t7+
                t1*t6*t7+t2^2*t8-t1*t5*t8,s4->-2*t2^2*t3*t4+n*t2^2*t3*t4+
                t1*t3*t4*t5+t1*t2*t4*t6-n*t1*t2*t4*t6+t1*t2*t3*t7-n*t1*t2*t3*t7-
                t1^2*t6*t7+n*t1^2*t6*t7+t1*t2^2*t8-t1^2*t5*t8,
                s5->t2*t3*t4*t5-n*t2*t3*t4*t5+t2^2*t4*t6-2*t1*t4*t5*t6+
                n*t1*t4*t5*t6-t2^2*t3*t7+n*t2^2*t3*t7+t1*t2*t6*t7-n*t1*t2*t6*t7-
                t2^3*t8+t1*t2*t5*t8,s6->t2*t3*t4*t5-n*t2*t3*t4*t5-t2^2*t4*t6+
                n*t2^2*t4*t6+t2^2*t3*t7-2*t1*t3*t5*t7+n*t1*t3*t5*t7+t1*t2*t6*t7-
                n*t1*t2*t6*t7-t2^3*t8+t1*t2*t5*t8,
                s7->-(t3*t4*t5^2)+n*t3*t4*t5^2+t2*t4*t5*t6-n*t2*t4*t5*t6+
                t2*t3*t5*t7-n*t2*t3*t5*t7-2*t2^2*t6*t7+n*t2^2*t6*t7+t1*t5*t6*t7+
                t2^2*t5*t8-t1*t5^2*t8},{t1->SP[k,k],t2->SP[k,p],
                t3->SP[k,q1],t4->SP[k,q2],t5->SP[p,p],t6->SP[p,q1],
                t7->SP[p,q2],t8->SP[q1,q2],v1->FV[k,mu],v2->FV[k,nu],
                v3->FV[p,mu],v4->FV[p,nu],m1->MT[mu,nu]}};
                scpexp[encli,n]
        ],
tidl[{{q1_,mu_},{q2_,nu_}},{p1_,p2_,p3_},n_] :>
        Block[{s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,t1,t2,t3,t4,
                t5,t6,t7,t8,t9,t10,t11,t12,t13,v1,v2,v3,v4,v5,v6,m1,encli},
                encli=
                {(m1*s3)/(s1*s2)+(s12*v1*v2)/(s1*s2^2)-(s11*v2*v3)/(s1*s2^2)-
                (s10*v1*v4)/(s1*s2^2)+(s9*v3*v4)/(s1*s2^2)+(s7*v2*v5)/(s1*s2^2)-
                (s5*v4*v5)/(s1*s2^2)+(s8*v1*v6)/(s1*s2^2)-(s6*v3*v6)/(s1*s2^2)+
                (s4*v5*v6)/(s1*s2^2),{s1->3-n,
                s2->t10*t2^2-t1*t10*t6+t3^2*t6-2*t2*t3*t7+t1*t7^2,
                s3->t11*t12*t2^2-t10*t13*t2^2-t1*t11*t12*t6+t1*t10*t13*t6-
                t13*t3^2*t6+t12*t3*t4*t6+t11*t3*t5*t6-t10*t4*t5*t6+
                2*t13*t2*t3*t7-t12*t2*t4*t7-t11*t2*t5*t7-t1*t13*t7^2+t4*t5*t7^2-
                t12*t2*t3*t8+t10*t2*t5*t8+t1*t12*t7*t8-t3*t5*t7*t8-t11*t2*t3*t9+
                t10*t2*t4*t9+t1*t11*t7*t9-t3*t4*t7*t9-t1*t10*t8*t9+t3^2*t8*t9,
                s4->2*t11*t12*t2^4-n*t11*t12*t2^4+t10*t13*t2^4-
                4*t1*t11*t12*t2^2*t6+2*n*t1*t11*t12*t2^2*t6-2*t1*t10*t13*t2^2*t6+
                t13*t2^2*t3^2*t6+2*t12*t2^2*t3*t4*t6-n*t12*t2^2*t3*t4*t6+
                2*t11*t2^2*t3*t5*t6-n*t11*t2^2*t3*t5*t6+t10*t2^2*t4*t5*t6+
                2*t1^2*t11*t12*t6^2-n*t1^2*t11*t12*t6^2+t1^2*t10*t13*t6^2-
                t1*t13*t3^2*t6^2-2*t1*t12*t3*t4*t6^2+n*t1*t12*t3*t4*t6^2-
                2*t1*t11*t3*t5*t6^2+n*t1*t11*t3*t5*t6^2-t1*t10*t4*t5*t6^2+
                3*t3^2*t4*t5*t6^2-n*t3^2*t4*t5*t6^2-2*t13*t2^3*t3*t7-
                2*t12*t2^3*t4*t7+n*t12*t2^3*t4*t7-2*t11*t2^3*t5*t7+
                n*t11*t2^3*t5*t7+2*t1*t13*t2*t3*t6*t7+2*t1*t12*t2*t4*t6*t7-
                n*t1*t12*t2*t4*t6*t7+2*t1*t11*t2*t5*t6*t7-n*t1*t11*t2*t5*t6*t7-
                6*t2*t3*t4*t5*t6*t7+2*n*t2*t3*t4*t5*t6*t7+t1*t13*t2^2*t7^2+
                2*t2^2*t4*t5*t7^2-n*t2^2*t4*t5*t7^2-t1^2*t13*t6*t7^2+
                t1*t4*t5*t6*t7^2-2*t12*t2^3*t3*t8+n*t12*t2^3*t3*t8-t10*t2^3*t5*t8+
                2*t1*t12*t2*t3*t6*t8-n*t1*t12*t2*t3*t6*t8+t1*t10*t2*t5*t6*t8-
                3*t2*t3^2*t5*t6*t8+n*t2*t3^2*t5*t6*t8+2*t1*t12*t2^2*t7*t8-
                n*t1*t12*t2^2*t7*t8+4*t2^2*t3*t5*t7*t8-n*t2^2*t3*t5*t7*t8-
                2*t1^2*t12*t6*t7*t8+n*t1^2*t12*t6*t7*t8+2*t1*t3*t5*t6*t7*t8-
                n*t1*t3*t5*t6*t7*t8-3*t1*t2*t5*t7^2*t8+n*t1*t2*t5*t7^2*t8-
                2*t11*t2^3*t3*t9+n*t11*t2^3*t3*t9-t10*t2^3*t4*t9+
                2*t1*t11*t2*t3*t6*t9-n*t1*t11*t2*t3*t6*t9+t1*t10*t2*t4*t6*t9-
                3*t2*t3^2*t4*t6*t9+n*t2*t3^2*t4*t6*t9+2*t1*t11*t2^2*t7*t9-
                n*t1*t11*t2^2*t7*t9+4*t2^2*t3*t4*t7*t9-n*t2^2*t3*t4*t7*t9-
                2*t1^2*t11*t6*t7*t9+n*t1^2*t11*t6*t7*t9+2*t1*t3*t4*t6*t7*t9-
                n*t1*t3*t4*t6*t7*t9-3*t1*t2*t4*t7^2*t9+n*t1*t2*t4*t7^2*t9+
                t1*t10*t2^2*t8*t9+2*t2^2*t3^2*t8*t9-n*t2^2*t3^2*t8*t9-
                t1^2*t10*t6*t8*t9+t1*t3^2*t6*t8*t9-6*t1*t2*t3*t7*t8*t9+
                2*n*t1*t2*t3*t7*t8*t9+3*t1^2*t7^2*t8*t9-n*t1^2*t7^2*t8*t9,
                s5->2*t11*t12*t2^3*t3-n*t11*t12*t2^3*t3+t10*t13*t2^3*t3-
                3*t10*t11*t2^3*t5+n*t10*t11*t2^3*t5-2*t1*t11*t12*t2*t3*t6+
                n*t1*t11*t12*t2*t3*t6-t1*t10*t13*t2*t3*t6+t13*t2*t3^3*t6+
                2*t12*t2*t3^2*t4*t6-n*t12*t2*t3^2*t4*t6+3*t1*t10*t11*t2*t5*t6-
                n*t1*t10*t11*t2*t5*t6-t11*t2*t3^2*t5*t6-2*t10*t2*t3*t4*t5*t6+
                n*t10*t2*t3*t4*t5*t6-2*t1*t11*t12*t2^2*t7+n*t1*t11*t12*t2^2*t7-
                t1*t10*t13*t2^2*t7-2*t13*t2^2*t3^2*t7-2*t12*t2^2*t3*t4*t7+
                n*t12*t2^2*t3*t4*t7+4*t11*t2^2*t3*t5*t7-n*t11*t2^2*t3*t5*t7+
                3*t10*t2^2*t4*t5*t7-n*t10*t2^2*t4*t5*t7+2*t1^2*t11*t12*t6*t7-
                n*t1^2*t11*t12*t6*t7+t1^2*t10*t13*t6*t7-t1*t13*t3^2*t6*t7-
                2*t1*t12*t3*t4*t6*t7+n*t1*t12*t3*t4*t6*t7-2*t1*t11*t3*t5*t6*t7+
                n*t1*t11*t3*t5*t6*t7-t1*t10*t4*t5*t6*t7+3*t3^2*t4*t5*t6*t7-
                n*t3^2*t4*t5*t6*t7+3*t1*t13*t2*t3*t7^2+2*t1*t12*t2*t4*t7^2-
                n*t1*t12*t2*t4*t7^2-t1*t11*t2*t5*t7^2-4*t2*t3*t4*t5*t7^2+
                n*t2*t3*t4*t5*t7^2-t1^2*t13*t7^3+t1*t4*t5*t7^3-2*t12*t2^2*t3^2*t8+
                n*t12*t2^2*t3^2*t8+2*t10*t2^2*t3*t5*t8-n*t10*t2^2*t3*t5*t8+
                4*t1*t12*t2*t3*t7*t8-2*n*t1*t12*t2*t3*t7*t8-2*t1*t10*t2*t5*t7*t8+
                n*t1*t10*t2*t5*t7*t8-2*t2*t3^2*t5*t7*t8+n*t2*t3^2*t5*t7*t8-
                2*t1^2*t12*t7^2*t8+n*t1^2*t12*t7^2*t8+2*t1*t3*t5*t7^2*t8-
                n*t1*t3*t5*t7^2*t8+3*t1*t10*t11*t2^2*t9-n*t1*t10*t11*t2^2*t9-
                2*t11*t2^2*t3^2*t9+n*t11*t2^2*t3^2*t9-t10*t2^2*t3*t4*t9-
                3*t1^2*t10*t11*t6*t9+n*t1^2*t10*t11*t6*t9+3*t1*t11*t3^2*t6*t9-
                n*t1*t11*t3^2*t6*t9+3*t1*t10*t3*t4*t6*t9-n*t1*t10*t3*t4*t6*t9-
                3*t3^3*t4*t6*t9+n*t3^3*t4*t6*t9-2*t1*t11*t2*t3*t7*t9-
                2*t1*t10*t2*t4*t7*t9+n*t1*t10*t2*t4*t7*t9+4*t2*t3^2*t4*t7*t9-
                n*t2*t3^2*t4*t7*t9+t1^2*t11*t7^2*t9-t1*t3*t4*t7^2*t9-
                2*t1*t10*t2*t3*t8*t9+n*t1*t10*t2*t3*t8*t9+2*t2*t3^3*t8*t9-
                n*t2*t3^3*t8*t9+2*t1^2*t10*t7*t8*t9-n*t1^2*t10*t7*t8*t9-
                2*t1*t3^2*t7*t8*t9+n*t1*t3^2*t7*t8*t9,
                s6->2*t11*t12*t2^3*t3-n*t11*t12*t2^3*t3+t10*t13*t2^3*t3-
                3*t10*t12*t2^3*t4+n*t10*t12*t2^3*t4-2*t1*t11*t12*t2*t3*t6+
                n*t1*t11*t12*t2*t3*t6-t1*t10*t13*t2*t3*t6+t13*t2*t3^3*t6+
                3*t1*t10*t12*t2*t4*t6-n*t1*t10*t12*t2*t4*t6-t12*t2*t3^2*t4*t6+
                2*t11*t2*t3^2*t5*t6-n*t11*t2*t3^2*t5*t6-2*t10*t2*t3*t4*t5*t6+
                n*t10*t2*t3*t4*t5*t6-2*t1*t11*t12*t2^2*t7+n*t1*t11*t12*t2^2*t7-
                t1*t10*t13*t2^2*t7-2*t13*t2^2*t3^2*t7+4*t12*t2^2*t3*t4*t7-
                n*t12*t2^2*t3*t4*t7-2*t11*t2^2*t3*t5*t7+n*t11*t2^2*t3*t5*t7+
                3*t10*t2^2*t4*t5*t7-n*t10*t2^2*t4*t5*t7+2*t1^2*t11*t12*t6*t7-
                n*t1^2*t11*t12*t6*t7+t1^2*t10*t13*t6*t7-t1*t13*t3^2*t6*t7-
                2*t1*t12*t3*t4*t6*t7+n*t1*t12*t3*t4*t6*t7-2*t1*t11*t3*t5*t6*t7+
                n*t1*t11*t3*t5*t6*t7-t1*t10*t4*t5*t6*t7+3*t3^2*t4*t5*t6*t7-
                n*t3^2*t4*t5*t6*t7+3*t1*t13*t2*t3*t7^2-t1*t12*t2*t4*t7^2+
                2*t1*t11*t2*t5*t7^2-n*t1*t11*t2*t5*t7^2-4*t2*t3*t4*t5*t7^2+
                n*t2*t3*t4*t5*t7^2-t1^2*t13*t7^3+t1*t4*t5*t7^3+
                3*t1*t10*t12*t2^2*t8-n*t1*t10*t12*t2^2*t8-2*t12*t2^2*t3^2*t8+
                n*t12*t2^2*t3^2*t8-t10*t2^2*t3*t5*t8-3*t1^2*t10*t12*t6*t8+
                n*t1^2*t10*t12*t6*t8+3*t1*t12*t3^2*t6*t8-n*t1*t12*t3^2*t6*t8+
                3*t1*t10*t3*t5*t6*t8-n*t1*t10*t3*t5*t6*t8-3*t3^3*t5*t6*t8+
                n*t3^3*t5*t6*t8-2*t1*t12*t2*t3*t7*t8-2*t1*t10*t2*t5*t7*t8+
                n*t1*t10*t2*t5*t7*t8+4*t2*t3^2*t5*t7*t8-n*t2*t3^2*t5*t7*t8+
                t1^2*t12*t7^2*t8-t1*t3*t5*t7^2*t8-2*t11*t2^2*t3^2*t9+
                n*t11*t2^2*t3^2*t9+2*t10*t2^2*t3*t4*t9-n*t10*t2^2*t3*t4*t9+
                4*t1*t11*t2*t3*t7*t9-2*n*t1*t11*t2*t3*t7*t9-2*t1*t10*t2*t4*t7*t9+
                n*t1*t10*t2*t4*t7*t9-2*t2*t3^2*t4*t7*t9+n*t2*t3^2*t4*t7*t9-
                2*t1^2*t11*t7^2*t9+n*t1^2*t11*t7^2*t9+2*t1*t3*t4*t7^2*t9-
                n*t1*t3*t4*t7^2*t9-2*t1*t10*t2*t3*t8*t9+n*t1*t10*t2*t3*t8*t9+
                2*t2*t3^3*t8*t9-n*t2*t3^3*t8*t9+2*t1^2*t10*t7*t8*t9-
                n*t1^2*t10*t7*t8*t9-2*t1*t3^2*t7*t8*t9+n*t1*t3^2*t7*t8*t9,
                s7->2*t11*t12*t2^2*t3*t6-n*t11*t12*t2^2*t3*t6+t10*t13*t2^2*t3*t6-
                3*t10*t11*t2^2*t5*t6+n*t10*t11*t2^2*t5*t6-2*t1*t11*t12*t3*t6^2+
                n*t1*t11*t12*t3*t6^2-t1*t10*t13*t3*t6^2+t13*t3^3*t6^2+
                2*t12*t3^2*t4*t6^2-n*t12*t3^2*t4*t6^2+3*t1*t10*t11*t5*t6^2-
                n*t1*t10*t11*t5*t6^2-t11*t3^2*t5*t6^2-2*t10*t3*t4*t5*t6^2+
                n*t10*t3*t4*t5*t6^2-2*t11*t12*t2^3*t7+n*t11*t12*t2^3*t7-
                t10*t13*t2^3*t7+2*t1*t11*t12*t2*t6*t7-n*t1*t11*t12*t2*t6*t7+
                t1*t10*t13*t2*t6*t7-3*t13*t2*t3^2*t6*t7-4*t12*t2*t3*t4*t6*t7+
                2*n*t12*t2*t3*t4*t6*t7+2*t11*t2*t3*t5*t6*t7+2*t10*t2*t4*t5*t6*t7-
                n*t10*t2*t4*t5*t6*t7+2*t13*t2^2*t3*t7^2+2*t12*t2^2*t4*t7^2-
                n*t12*t2^2*t4*t7^2+2*t11*t2^2*t5*t7^2-n*t11*t2^2*t5*t7^2+
                t1*t13*t3*t6*t7^2-3*t1*t11*t5*t6*t7^2+n*t1*t11*t5*t6*t7^2+
                2*t3*t4*t5*t6*t7^2-n*t3*t4*t5*t6*t7^2-t1*t13*t2*t7^3-
                2*t2*t4*t5*t7^3+n*t2*t4*t5*t7^3-2*t12*t2*t3^2*t6*t8+
                n*t12*t2*t3^2*t6*t8+2*t10*t2*t3*t5*t6*t8-n*t10*t2*t3*t5*t6*t8+
                2*t12*t2^2*t3*t7*t8-n*t12*t2^2*t3*t7*t8+t10*t2^2*t5*t7*t8+
                2*t1*t12*t3*t6*t7*t8-n*t1*t12*t3*t6*t7*t8-3*t1*t10*t5*t6*t7*t8+
                n*t1*t10*t5*t6*t7*t8+t3^2*t5*t6*t7*t8-2*t1*t12*t2*t7^2*t8+
                n*t1*t12*t2*t7^2*t8-4*t2*t3*t5*t7^2*t8+n*t2*t3*t5*t7^2*t8+
                3*t1*t5*t7^3*t8-n*t1*t5*t7^3*t8+3*t10*t11*t2^3*t9-
                n*t10*t11*t2^3*t9-3*t1*t10*t11*t2*t6*t9+n*t1*t10*t11*t2*t6*t9+
                t11*t2*t3^2*t6*t9+2*t10*t2*t3*t4*t6*t9-n*t10*t2*t3*t4*t6*t9-
                4*t11*t2^2*t3*t7*t9+n*t11*t2^2*t3*t7*t9-2*t10*t2^2*t4*t7*t9+
                n*t10*t2^2*t4*t7*t9+2*t1*t11*t3*t6*t7*t9-n*t1*t11*t3*t6*t7*t9-
                2*t3^2*t4*t6*t7*t9+n*t3^2*t4*t6*t7*t9+t1*t11*t2*t7^2*t9+
                2*t2*t3*t4*t7^2*t9-n*t2*t3*t4*t7^2*t9-3*t10*t2^2*t3*t8*t9+
                n*t10*t2^2*t3*t8*t9+t1*t10*t3*t6*t8*t9-t3^3*t6*t8*t9+
                2*t1*t10*t2*t7*t8*t9-n*t1*t10*t2*t7*t8*t9+4*t2*t3^2*t7*t8*t9-
                n*t2*t3^2*t7*t8*t9-3*t1*t3*t7^2*t8*t9+n*t1*t3*t7^2*t8*t9,
                s8->2*t11*t12*t2^2*t3*t6-n*t11*t12*t2^2*t3*t6+t10*t13*t2^2*t3*t6-
                3*t10*t12*t2^2*t4*t6+n*t10*t12*t2^2*t4*t6-2*t1*t11*t12*t3*t6^2+
                n*t1*t11*t12*t3*t6^2-t1*t10*t13*t3*t6^2+t13*t3^3*t6^2+
                3*t1*t10*t12*t4*t6^2-n*t1*t10*t12*t4*t6^2-t12*t3^2*t4*t6^2+
                2*t11*t3^2*t5*t6^2-n*t11*t3^2*t5*t6^2-2*t10*t3*t4*t5*t6^2+
                n*t10*t3*t4*t5*t6^2-2*t11*t12*t2^3*t7+n*t11*t12*t2^3*t7-
                t10*t13*t2^3*t7+2*t1*t11*t12*t2*t6*t7-n*t1*t11*t12*t2*t6*t7+
                t1*t10*t13*t2*t6*t7-3*t13*t2*t3^2*t6*t7+2*t12*t2*t3*t4*t6*t7-
                4*t11*t2*t3*t5*t6*t7+2*n*t11*t2*t3*t5*t6*t7+2*t10*t2*t4*t5*t6*t7-
                n*t10*t2*t4*t5*t6*t7+2*t13*t2^2*t3*t7^2+2*t12*t2^2*t4*t7^2-
                n*t12*t2^2*t4*t7^2+2*t11*t2^2*t5*t7^2-n*t11*t2^2*t5*t7^2+
                t1*t13*t3*t6*t7^2-3*t1*t12*t4*t6*t7^2+n*t1*t12*t4*t6*t7^2+
                2*t3*t4*t5*t6*t7^2-n*t3*t4*t5*t6*t7^2-t1*t13*t2*t7^3-
                2*t2*t4*t5*t7^3+n*t2*t4*t5*t7^3+3*t10*t12*t2^3*t8-
                n*t10*t12*t2^3*t8-3*t1*t10*t12*t2*t6*t8+n*t1*t10*t12*t2*t6*t8+
                t12*t2*t3^2*t6*t8+2*t10*t2*t3*t5*t6*t8-n*t10*t2*t3*t5*t6*t8-
                4*t12*t2^2*t3*t7*t8+n*t12*t2^2*t3*t7*t8-2*t10*t2^2*t5*t7*t8+
                n*t10*t2^2*t5*t7*t8+2*t1*t12*t3*t6*t7*t8-n*t1*t12*t3*t6*t7*t8-
                2*t3^2*t5*t6*t7*t8+n*t3^2*t5*t6*t7*t8+t1*t12*t2*t7^2*t8+
                2*t2*t3*t5*t7^2*t8-n*t2*t3*t5*t7^2*t8-2*t11*t2*t3^2*t6*t9+
                n*t11*t2*t3^2*t6*t9+2*t10*t2*t3*t4*t6*t9-n*t10*t2*t3*t4*t6*t9+
                2*t11*t2^2*t3*t7*t9-n*t11*t2^2*t3*t7*t9+t10*t2^2*t4*t7*t9+
                2*t1*t11*t3*t6*t7*t9-n*t1*t11*t3*t6*t7*t9-3*t1*t10*t4*t6*t7*t9+
                n*t1*t10*t4*t6*t7*t9+t3^2*t4*t6*t7*t9-2*t1*t11*t2*t7^2*t9+
                n*t1*t11*t2*t7^2*t9-4*t2*t3*t4*t7^2*t9+n*t2*t3*t4*t7^2*t9+
                3*t1*t4*t7^3*t9-n*t1*t4*t7^3*t9-3*t10*t2^2*t3*t8*t9+
                n*t10*t2^2*t3*t8*t9+t1*t10*t3*t6*t8*t9-t3^3*t6*t8*t9+
                2*t1*t10*t2*t7*t8*t9-n*t1*t10*t2*t7*t8*t9+4*t2*t3^2*t7*t8*t9-
                n*t2*t3^2*t7*t8*t9-3*t1*t3*t7^2*t8*t9+n*t1*t3*t7^2*t8*t9,
                s9->t1*t10*t11*t12*t2^2-t1*t10^2*t13*t2^2+2*t11*t12*t2^2*t3^2-
                n*t11*t12*t2^2*t3^2+t10*t13*t2^2*t3^2-3*t10*t12*t2^2*t3*t4+
                n*t10*t12*t2^2*t3*t4-3*t10*t11*t2^2*t3*t5+n*t10*t11*t2^2*t3*t5+
                3*t10^2*t2^2*t4*t5-n*t10^2*t2^2*t4*t5-t1^2*t10*t11*t12*t6+
                t1^2*t10^2*t13*t6+t1*t11*t12*t3^2*t6-2*t1*t10*t13*t3^2*t6+
                t13*t3^4*t6+t1*t10*t12*t3*t4*t6-t12*t3^3*t4*t6+
                t1*t10*t11*t3*t5*t6-t11*t3^3*t5*t6-t1*t10^2*t4*t5*t6+
                t10*t3^2*t4*t5*t6-6*t1*t11*t12*t2*t3*t7+2*n*t1*t11*t12*t2*t3*t7+
                2*t1*t10*t13*t2*t3*t7-2*t13*t2*t3^3*t7+2*t1*t10*t12*t2*t4*t7-
                n*t1*t10*t12*t2*t4*t7+4*t12*t2*t3^2*t4*t7-n*t12*t2*t3^2*t4*t7+
                2*t1*t10*t11*t2*t5*t7-n*t1*t10*t11*t2*t5*t7+4*t11*t2*t3^2*t5*t7-
                n*t11*t2*t3^2*t5*t7-6*t10*t2*t3*t4*t5*t7+2*n*t10*t2*t3*t4*t5*t7+
                3*t1^2*t11*t12*t7^2-n*t1^2*t11*t12*t7^2-t1^2*t10*t13*t7^2+
                t1*t13*t3^2*t7^2-3*t1*t12*t3*t4*t7^2+n*t1*t12*t3*t4*t7^2-
                3*t1*t11*t3*t5*t7^2+n*t1*t11*t3*t5*t7^2+t1*t10*t4*t5*t7^2+
                2*t3^2*t4*t5*t7^2-n*t3^2*t4*t5*t7^2+2*t1*t10*t12*t2*t3*t8-
                n*t1*t10*t12*t2*t3*t8-2*t12*t2*t3^3*t8+n*t12*t2*t3^3*t8-
                2*t1*t10^2*t2*t5*t8+n*t1*t10^2*t2*t5*t8+2*t10*t2*t3^2*t5*t8-
                n*t10*t2*t3^2*t5*t8-2*t1^2*t10*t12*t7*t8+n*t1^2*t10*t12*t7*t8+
                2*t1*t12*t3^2*t7*t8-n*t1*t12*t3^2*t7*t8+2*t1*t10*t3*t5*t7*t8-
                n*t1*t10*t3*t5*t7*t8-2*t3^3*t5*t7*t8+n*t3^3*t5*t7*t8+
                2*t1*t10*t11*t2*t3*t9-n*t1*t10*t11*t2*t3*t9-2*t11*t2*t3^3*t9+
                n*t11*t2*t3^3*t9-2*t1*t10^2*t2*t4*t9+n*t1*t10^2*t2*t4*t9+
                2*t10*t2*t3^2*t4*t9-n*t10*t2*t3^2*t4*t9-2*t1^2*t10*t11*t7*t9+
                n*t1^2*t10*t11*t7*t9+2*t1*t11*t3^2*t7*t9-n*t1*t11*t3^2*t7*t9+
                2*t1*t10*t3*t4*t7*t9-n*t1*t10*t3*t4*t7*t9-2*t3^3*t4*t7*t9+
                n*t3^3*t4*t7*t9+2*t1^2*t10^2*t8*t9-n*t1^2*t10^2*t8*t9-
                4*t1*t10*t3^2*t8*t9+2*n*t1*t10*t3^2*t8*t9+2*t3^4*t8*t9-
                n*t3^4*t8*t9,s10->t10*t11*t12*t2^3-t10^2*t13*t2^3-
                t1*t10*t11*t12*t2*t6+t1*t10^2*t13*t2*t6+3*t11*t12*t2*t3^2*t6-
                n*t11*t12*t2*t3^2*t6-t10*t13*t2*t3^2*t6-2*t10*t12*t2*t3*t4*t6+
                n*t10*t12*t2*t3*t4*t6-2*t10*t11*t2*t3*t5*t6+n*t10*t11*t2*t3*t5*t6+
                2*t10^2*t2*t4*t5*t6-n*t10^2*t2*t4*t5*t6-4*t11*t12*t2^2*t3*t7+
                n*t11*t12*t2^2*t3*t7+3*t10*t13*t2^2*t3*t7-t10*t12*t2^2*t4*t7+
                2*t10*t11*t2^2*t5*t7-n*t10*t11*t2^2*t5*t7-2*t1*t11*t12*t3*t6*t7+
                n*t1*t11*t12*t3*t6*t7-t1*t10*t13*t3*t6*t7+t13*t3^3*t6*t7+
                3*t1*t10*t12*t4*t6*t7-n*t1*t10*t12*t4*t6*t7-t12*t3^2*t4*t6*t7+
                2*t11*t3^2*t5*t6*t7-n*t11*t3^2*t5*t6*t7-2*t10*t3*t4*t5*t6*t7+
                n*t10*t3*t4*t5*t6*t7+3*t1*t11*t12*t2*t7^2-n*t1*t11*t12*t2*t7^2-
                t1*t10*t13*t2*t7^2-2*t13*t2*t3^2*t7^2+4*t12*t2*t3*t4*t7^2-
                n*t12*t2*t3*t4*t7^2-2*t11*t2*t3*t5*t7^2+n*t11*t2*t3*t5*t7^2-
                2*t10*t2*t4*t5*t7^2+n*t10*t2*t4*t5*t7^2+t1*t13*t3*t7^3-
                3*t1*t12*t4*t7^3+n*t1*t12*t4*t7^3+2*t3*t4*t5*t7^3-n*t3*t4*t5*t7^3+
                2*t10*t12*t2^2*t3*t8-n*t10*t12*t2^2*t3*t8-2*t10^2*t2^2*t5*t8+
                n*t10^2*t2^2*t5*t8-2*t1*t10*t12*t2*t7*t8+n*t1*t10*t12*t2*t7*t8-
                2*t12*t2*t3^2*t7*t8+n*t12*t2*t3^2*t7*t8+4*t10*t2*t3*t5*t7*t8-
                2*n*t10*t2*t3*t5*t7*t8+2*t1*t12*t3*t7^2*t8-n*t1*t12*t3*t7^2*t8-
                2*t3^2*t5*t7^2*t8+n*t3^2*t5*t7^2*t8-t10*t11*t2^2*t3*t9+
                t10^2*t2^2*t4*t9+3*t1*t10*t11*t3*t6*t9-n*t1*t10*t11*t3*t6*t9-
                3*t11*t3^3*t6*t9+n*t11*t3^3*t6*t9-3*t1*t10^2*t4*t6*t9+
                n*t1*t10^2*t4*t6*t9+3*t10*t3^2*t4*t6*t9-n*t10*t3^2*t4*t6*t9-
                2*t1*t10*t11*t2*t7*t9+n*t1*t10*t11*t2*t7*t9+4*t11*t2*t3^2*t7*t9-
                n*t11*t2*t3^2*t7*t9-2*t10*t2*t3*t4*t7*t9-t1*t11*t3*t7^2*t9+
                3*t1*t10*t4*t7^2*t9-n*t1*t10*t4*t7^2*t9-2*t3^2*t4*t7^2*t9+
                n*t3^2*t4*t7^2*t9+2*t1*t10^2*t2*t8*t9-n*t1*t10^2*t2*t8*t9-
                2*t10*t2*t3^2*t8*t9+n*t10*t2*t3^2*t8*t9-2*t1*t10*t3*t7*t8*t9+
                n*t1*t10*t3*t7*t8*t9+2*t3^3*t7*t8*t9-n*t3^3*t7*t8*t9,
                s11->t10*t11*t12*t2^3-t10^2*t13*t2^3-t1*t10*t11*t12*t2*t6+
                t1*t10^2*t13*t2*t6+3*t11*t12*t2*t3^2*t6-n*t11*t12*t2*t3^2*t6-
                t10*t13*t2*t3^2*t6-2*t10*t12*t2*t3*t4*t6+n*t10*t12*t2*t3*t4*t6-
                2*t10*t11*t2*t3*t5*t6+n*t10*t11*t2*t3*t5*t6+2*t10^2*t2*t4*t5*t6-
                n*t10^2*t2*t4*t5*t6-4*t11*t12*t2^2*t3*t7+n*t11*t12*t2^2*t3*t7+
                3*t10*t13*t2^2*t3*t7+2*t10*t12*t2^2*t4*t7-n*t10*t12*t2^2*t4*t7-
                t10*t11*t2^2*t5*t7-2*t1*t11*t12*t3*t6*t7+n*t1*t11*t12*t3*t6*t7-
                t1*t10*t13*t3*t6*t7+t13*t3^3*t6*t7+2*t12*t3^2*t4*t6*t7-
                n*t12*t3^2*t4*t6*t7+3*t1*t10*t11*t5*t6*t7-n*t1*t10*t11*t5*t6*t7-
                t11*t3^2*t5*t6*t7-2*t10*t3*t4*t5*t6*t7+n*t10*t3*t4*t5*t6*t7+
                3*t1*t11*t12*t2*t7^2-n*t1*t11*t12*t2*t7^2-t1*t10*t13*t2*t7^2-
                2*t13*t2*t3^2*t7^2-2*t12*t2*t3*t4*t7^2+n*t12*t2*t3*t4*t7^2+
                4*t11*t2*t3*t5*t7^2-n*t11*t2*t3*t5*t7^2-2*t10*t2*t4*t5*t7^2+
                n*t10*t2*t4*t5*t7^2+t1*t13*t3*t7^3-3*t1*t11*t5*t7^3+
                n*t1*t11*t5*t7^3+2*t3*t4*t5*t7^3-n*t3*t4*t5*t7^3-
                t10*t12*t2^2*t3*t8+t10^2*t2^2*t5*t8+3*t1*t10*t12*t3*t6*t8-
                n*t1*t10*t12*t3*t6*t8-3*t12*t3^3*t6*t8+n*t12*t3^3*t6*t8-
                3*t1*t10^2*t5*t6*t8+n*t1*t10^2*t5*t6*t8+3*t10*t3^2*t5*t6*t8-
                n*t10*t3^2*t5*t6*t8-2*t1*t10*t12*t2*t7*t8+n*t1*t10*t12*t2*t7*t8+
                4*t12*t2*t3^2*t7*t8-n*t12*t2*t3^2*t7*t8-2*t10*t2*t3*t5*t7*t8-
                t1*t12*t3*t7^2*t8+3*t1*t10*t5*t7^2*t8-n*t1*t10*t5*t7^2*t8-
                2*t3^2*t5*t7^2*t8+n*t3^2*t5*t7^2*t8+2*t10*t11*t2^2*t3*t9-
                n*t10*t11*t2^2*t3*t9-2*t10^2*t2^2*t4*t9+n*t10^2*t2^2*t4*t9-
                2*t1*t10*t11*t2*t7*t9+n*t1*t10*t11*t2*t7*t9-2*t11*t2*t3^2*t7*t9+
                n*t11*t2*t3^2*t7*t9+4*t10*t2*t3*t4*t7*t9-2*n*t10*t2*t3*t4*t7*t9+
                2*t1*t11*t3*t7^2*t9-n*t1*t11*t3*t7^2*t9-2*t3^2*t4*t7^2*t9+
                n*t3^2*t4*t7^2*t9+2*t1*t10^2*t2*t8*t9-n*t1*t10^2*t2*t8*t9-
                2*t10*t2*t3^2*t8*t9+n*t10*t2*t3^2*t8*t9-2*t1*t10*t3*t7*t8*t9+
                n*t1*t10*t3*t7*t8*t9+2*t3^3*t7*t8*t9-n*t3^3*t7*t8*t9,
                s12->t10*t11*t12*t2^2*t6-t10^2*t13*t2^2*t6-t1*t10*t11*t12*t6^2+
                t1*t10^2*t13*t6^2+3*t11*t12*t3^2*t6^2-n*t11*t12*t3^2*t6^2-
                t10*t13*t3^2*t6^2-2*t10*t12*t3*t4*t6^2+n*t10*t12*t3*t4*t6^2-
                2*t10*t11*t3*t5*t6^2+n*t10*t11*t3*t5*t6^2+2*t10^2*t4*t5*t6^2-
                n*t10^2*t4*t5*t6^2-6*t11*t12*t2*t3*t6*t7+2*n*t11*t12*t2*t3*t6*t7+
                2*t10*t13*t2*t3*t6*t7+2*t10*t12*t2*t4*t6*t7-n*t10*t12*t2*t4*t6*t7+
                2*t10*t11*t2*t5*t6*t7-n*t10*t11*t2*t5*t6*t7+2*t11*t12*t2^2*t7^2-
                n*t11*t12*t2^2*t7^2+t10*t13*t2^2*t7^2+t1*t11*t12*t6*t7^2-
                2*t1*t10*t13*t6*t7^2+t13*t3^2*t6*t7^2+2*t12*t3*t4*t6*t7^2-
                n*t12*t3*t4*t6*t7^2+2*t11*t3*t5*t6*t7^2-n*t11*t3*t5*t6*t7^2-
                4*t10*t4*t5*t6*t7^2+2*n*t10*t4*t5*t6*t7^2-2*t13*t2*t3*t7^3-
                2*t12*t2*t4*t7^3+n*t12*t2*t4*t7^3-2*t11*t2*t5*t7^3+
                n*t11*t2*t5*t7^3+t1*t13*t7^4+2*t4*t5*t7^4-n*t4*t5*t7^4+
                2*t10*t12*t2*t3*t6*t8-n*t10*t12*t2*t3*t6*t8-2*t10^2*t2*t5*t6*t8+
                n*t10^2*t2*t5*t6*t8-3*t10*t12*t2^2*t7*t8+n*t10*t12*t2^2*t7*t8+
                t1*t10*t12*t6*t7*t8-3*t12*t3^2*t6*t7*t8+n*t12*t3^2*t6*t7*t8+
                2*t10*t3*t5*t6*t7*t8-n*t10*t3*t5*t6*t7*t8+4*t12*t2*t3*t7^2*t8-
                n*t12*t2*t3*t7^2*t8+2*t10*t2*t5*t7^2*t8-n*t10*t2*t5*t7^2*t8-
                t1*t12*t7^3*t8-2*t3*t5*t7^3*t8+n*t3*t5*t7^3*t8+
                2*t10*t11*t2*t3*t6*t9-n*t10*t11*t2*t3*t6*t9-2*t10^2*t2*t4*t6*t9+
                n*t10^2*t2*t4*t6*t9-3*t10*t11*t2^2*t7*t9+n*t10*t11*t2^2*t7*t9+
                t1*t10*t11*t6*t7*t9-3*t11*t3^2*t6*t7*t9+n*t11*t3^2*t6*t7*t9+
                2*t10*t3*t4*t6*t7*t9-n*t10*t3*t4*t6*t7*t9+4*t11*t2*t3*t7^2*t9-
                n*t11*t2*t3*t7^2*t9+2*t10*t2*t4*t7^2*t9-n*t10*t2*t4*t7^2*t9-
                t1*t11*t7^3*t9-2*t3*t4*t7^3*t9+n*t3*t4*t7^3*t9+3*t10^2*t2^2*t8*t9-
                n*t10^2*t2^2*t8*t9-t1*t10^2*t6*t8*t9+t10*t3^2*t6*t8*t9-
                6*t10*t2*t3*t7*t8*t9+2*n*t10*t2*t3*t7*t8*t9+t1*t10*t7^2*t8*t9+
                2*t3^2*t7^2*t8*t9-n*t3^2*t7^2*t8*t9},
                {t1->SP[p1,p1],t2->SP[p1,p2],t3->SP[p1,p3],t4->SP[p1,q1],
                t5->SP[p1,q2],t6->SP[p2,p2],t7->SP[p2,p3],t8->SP[p2,q1],
                t9->SP[p2,q2],t10->SP[p3,p3],t11->SP[p3,q1],t12->SP[p3,q2],
                t13->SP[q1,q2],v1->FV[p1,mu],v2->FV[p1,nu],v3->FV[p2,mu],
                v4->FV[p2,nu],v5->FV[p3,mu],v6->FV[p3,nu],m1->MT[mu,nu]}};
                scpexp[encli,n]
        ]
}
