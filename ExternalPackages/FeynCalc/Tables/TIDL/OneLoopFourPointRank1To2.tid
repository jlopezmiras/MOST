{
(* D_{mu} *)
tidl[{{q_,mu_}},{p1_,p2_,p3_},n_]/; Expand[ExpandScalarProduct[Pair[Momentum[p1, n],
Momentum[p3, n]]^2 Pair[Momentum[p2, n], Momentum[p2, n]] - 2 Pair[Momentum[p1, n],
Momentum[p2, n]] Pair[Momentum[p1, n],  Momentum[p3, n]] Pair[Momentum[p2, n],
Momentum[p3, n]] + Pair[Momentum[p1, n], Momentum[p1, n]] Pair[Momentum[p2, n],
Momentum[p3, n]]^2 + Pair[Momentum[p1, n], Momentum[p2, n]]^2 Pair[Momentum[p3, n],
Momentum[p3, n]] - Pair[Momentum[p1, n], Momentum[p1, n]] Pair[Momentum[p2, n],
Momentum[p2, n]] Pair[Momentum[p3, n], Momentum[p3, n]]]] =!= 0 :>
        Block[{s1,s2,s3,s4,t1,t2,t3,t4,t5,t6,t7,t8,t9,v1,v2,v3,encli},
                encli=
                {(s4*v1)/s1-(s3*v2)/s1+(s2*v3)/s1,
                {s1->t3^2*t5-2*t2*t3*t6+t1*t6^2+t2^2*t8-t1*t5*t8,
                s2->t3*t4*t5-t2*t4*t6-t2*t3*t7+t1*t6*t7+t2^2*t9-t1*t5*t9,
                s3->t3*t4*t6-t3^2*t7-t2*t4*t8+t1*t7*t8+t2*t3*t9-t1*t6*t9,
                s4->t4*t6^2-t3*t6*t7-t4*t5*t8+t2*t7*t8+t3*t5*t9-t2*t6*t9},
                {t1->SP[p1,p1],t2->SP[p1,p2],t3->SP[p1,p3],t4->SP[p1,q],
                t5->SP[p2,p2],t6->SP[p2,p3],t7->SP[p2,q],t8->SP[p3,p3],
                t9->SP[p3,q],v1->FV[p1,mu],v2->FV[p2,mu],v3->FV[p3,mu]}};
                scpexp[encli,n]
        ],
(* D_{mu,nu} *)
tidl[{{q_,mu_}, {q_,nu_}},{p1_,p2_,p3_},n_]/; Expand[ExpandScalarProduct[Pair[Momentum[p1, n],
Momentum[p3, n]]^2 Pair[Momentum[p2, n], Momentum[p2, n]] - 2 Pair[Momentum[p1, n],
Momentum[p2, n]] Pair[Momentum[p1, n],  Momentum[p3, n]] Pair[Momentum[p2, n],
Momentum[p3, n]] + Pair[Momentum[p1, n], Momentum[p1, n]] Pair[Momentum[p2, n],
Momentum[p3, n]]^2 + Pair[Momentum[p1, n], Momentum[p2, n]]^2 Pair[Momentum[p3, n],
Momentum[p3, n]] - Pair[Momentum[p1, n], Momentum[p1, n]] Pair[Momentum[p2, n],
Momentum[p2, n]] Pair[Momentum[p3, n], Momentum[p3, n]]]] =!= 0 :>
        Block[{s1,s2,s3,s4,s5,s6,s7,s8,s9,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,
                v1,v2,v3,v4,v5,v6,m1,encli},
                encli=
                {(m1*s3)/(s1*s2)+(s9*v1*v2)/(s1^2*s2)-(s8*v2*v3)/(s1^2*s2)-
                (s8*v1*v4)/(s1^2*s2)+(s7*v3*v4)/(s1^2*s2)+(s6*v2*v5)/(s1^2*s2)-
                (s5*v4*v5)/(s1^2*s2)+(s6*v1*v6)/(s1^2*s2)-(s5*v3*v6)/(s1^2*s2)+
                (s4*v5*v6)/(s1^2*s2),{s1->t3^2*t5-2*t2*t3*t6+t1*t6^2+t2^2*t8-
                t1*t5*t8,s2->3-n,s3->-(t10*t3^2*t5)+2*t10*t2*t3*t6-
                t1*t10*t6^2+t4^2*t6^2-2*t3*t4*t6*t7+t3^2*t7^2-t10*t2^2*t8+
                t1*t10*t5*t8-t4^2*t5*t8+2*t2*t4*t7*t8-t1*t7^2*t8+2*t3*t4*t5*t9-
                2*t2*t4*t6*t9-2*t2*t3*t7*t9+2*t1*t6*t7*t9+t2^2*t9^2-t1*t5*t9^2,
                s4->t10*t2^2*t3^2*t5-t1*t10*t3^2*t5^2+3*t3^2*t4^2*t5^2-
                n*t3^2*t4^2*t5^2-2*t10*t2^3*t3*t6+2*t1*t10*t2*t3*t5*t6-
                6*t2*t3*t4^2*t5*t6+2*n*t2*t3*t4^2*t5*t6+t1*t10*t2^2*t6^2+
                2*t2^2*t4^2*t6^2-n*t2^2*t4^2*t6^2-t1^2*t10*t5*t6^2+
                t1*t4^2*t5*t6^2-6*t2*t3^2*t4*t5*t7+2*n*t2*t3^2*t4*t5*t7+
                8*t2^2*t3*t4*t6*t7-2*n*t2^2*t3*t4*t6*t7+4*t1*t3*t4*t5*t6*t7-
                2*n*t1*t3*t4*t5*t6*t7-6*t1*t2*t4*t6^2*t7+2*n*t1*t2*t4*t6^2*t7+
                2*t2^2*t3^2*t7^2-n*t2^2*t3^2*t7^2+t1*t3^2*t5*t7^2-
                6*t1*t2*t3*t6*t7^2+2*n*t1*t2*t3*t6*t7^2+3*t1^2*t6^2*t7^2-
                n*t1^2*t6^2*t7^2+t10*t2^4*t8-2*t1*t10*t2^2*t5*t8+t2^2*t4^2*t5*t8+
                t1^2*t10*t5^2*t8-t1*t4^2*t5^2*t8-2*t2^3*t4*t7*t8+
                2*t1*t2*t4*t5*t7*t8+t1*t2^2*t7^2*t8-t1^2*t5*t7^2*t8+
                4*t2^2*t3*t4*t5*t9-2*n*t2^2*t3*t4*t5*t9-4*t1*t3*t4*t5^2*t9+
                2*n*t1*t3*t4*t5^2*t9-4*t2^3*t4*t6*t9+2*n*t2^3*t4*t6*t9+
                4*t1*t2*t4*t5*t6*t9-2*n*t1*t2*t4*t5*t6*t9-4*t2^3*t3*t7*t9+
                2*n*t2^3*t3*t7*t9+4*t1*t2*t3*t5*t7*t9-2*n*t1*t2*t3*t5*t7*t9+
                4*t1*t2^2*t6*t7*t9-2*n*t1*t2^2*t6*t7*t9-4*t1^2*t5*t6*t7*t9+
                2*n*t1^2*t5*t6*t7*t9+2*t2^4*t9^2-n*t2^4*t9^2-4*t1*t2^2*t5*t9^2+
                2*n*t1*t2^2*t5*t9^2+2*t1^2*t5^2*t9^2-n*t1^2*t5^2*t9^2,
                s5->t10*t2*t3^3*t5-2*t10*t2^2*t3^2*t6-t1*t10*t3^2*t5*t6+
                3*t3^2*t4^2*t5*t6-n*t3^2*t4^2*t5*t6+3*t1*t10*t2*t3*t6^2-
                4*t2*t3*t4^2*t6^2+n*t2*t3*t4^2*t6^2-t1^2*t10*t6^3+t1*t4^2*t6^3-
                3*t3^3*t4*t5*t7+n*t3^3*t4*t5*t7+2*t2*t3^2*t4*t6*t7+
                t1*t3*t4*t6^2*t7-n*t1*t3*t4*t6^2*t7+2*t2*t3^3*t7^2-n*t2*t3^3*t7^2-
                2*t1*t3^2*t6*t7^2+n*t1*t3^2*t6*t7^2+t10*t2^3*t3*t8-
                t1*t10*t2*t3*t5*t8-2*t2*t3*t4^2*t5*t8+n*t2*t3*t4^2*t5*t8-
                t1*t10*t2^2*t6*t8+3*t2^2*t4^2*t6*t8-n*t2^2*t4^2*t6*t8+
                t1^2*t10*t5*t6*t8-t1*t4^2*t5*t6*t8+t2^2*t3*t4*t7*t8-
                n*t2^2*t3*t4*t7*t8+3*t1*t3*t4*t5*t7*t8-n*t1*t3*t4*t5*t7*t8-
                4*t1*t2*t4*t6*t7*t8+2*n*t1*t2*t4*t6*t7*t8-2*t1*t2*t3*t7^2*t8+
                n*t1*t2*t3*t7^2*t8+2*t1^2*t6*t7^2*t8-n*t1^2*t6*t7^2*t8+
                t2*t3^2*t4*t5*t9-n*t2*t3^2*t4*t5*t9+2*t2^2*t3*t4*t6*t9-
                4*t1*t3*t4*t5*t6*t9+2*n*t1*t3*t4*t5*t6*t9+t1*t2*t4*t6^2*t9-
                n*t1*t2*t4*t6^2*t9-4*t2^2*t3^2*t7*t9+2*n*t2^2*t3^2*t7*t9+
                3*t1*t3^2*t5*t7*t9-n*t1*t3^2*t5*t7*t9+2*t1*t2*t3*t6*t7*t9-
                2*n*t1*t2*t3*t6*t7*t9-t1^2*t6^2*t7*t9+n*t1^2*t6^2*t7*t9-
                3*t2^3*t4*t8*t9+n*t2^3*t4*t8*t9+3*t1*t2*t4*t5*t8*t9-
                n*t1*t2*t4*t5*t8*t9+3*t1*t2^2*t7*t8*t9-n*t1*t2^2*t7*t8*t9-
                3*t1^2*t5*t7*t8*t9+n*t1^2*t5*t7*t8*t9+2*t2^3*t3*t9^2-
                n*t2^3*t3*t9^2-2*t1*t2*t3*t5*t9^2+n*t1*t2*t3*t5*t9^2-
                2*t1*t2^2*t6*t9^2+n*t1*t2^2*t6*t9^2+2*t1^2*t5*t6*t9^2-
                n*t1^2*t5*t6*t9^2,s6->t10*t3^3*t5^2-3*t10*t2*t3^2*t5*t6+
                2*t10*t2^2*t3*t6^2+t1*t10*t3*t5*t6^2+2*t3*t4^2*t5*t6^2-
                n*t3*t4^2*t5*t6^2-t1*t10*t2*t6^3-2*t2*t4^2*t6^3+n*t2*t4^2*t6^3-
                t3^2*t4*t5*t6*t7+n*t3^2*t4*t5*t6*t7-2*t2*t3*t4*t6^2*t7+
                3*t1*t4*t6^3*t7-n*t1*t4*t6^3*t7-t3^3*t5*t7^2+4*t2*t3^2*t6*t7^2-
                n*t2*t3^2*t6*t7^2-3*t1*t3*t6^2*t7^2+n*t1*t3*t6^2*t7^2+
                t10*t2^2*t3*t5*t8-t1*t10*t3*t5^2*t8-2*t3*t4^2*t5^2*t8+
                n*t3*t4^2*t5^2*t8-t10*t2^3*t6*t8+t1*t10*t2*t5*t6*t8+
                2*t2*t4^2*t5*t6*t8-n*t2*t4^2*t5*t6*t8+4*t2*t3*t4*t5*t7*t8-
                2*n*t2*t3*t4*t5*t7*t8-t2^2*t4*t6*t7*t8+n*t2^2*t4*t6*t7*t8-
                3*t1*t4*t5*t6*t7*t8+n*t1*t4*t5*t6*t7*t8-3*t2^2*t3*t7^2*t8+
                n*t2^2*t3*t7^2*t8+t1*t3*t5*t7^2*t8+2*t1*t2*t6*t7^2*t8-
                n*t1*t2*t6*t7^2*t8+t3^2*t4*t5^2*t9-n*t3^2*t4*t5^2*t9-
                2*t2*t3*t4*t5*t6*t9+2*n*t2*t3*t4*t5*t6*t9+4*t2^2*t4*t6^2*t9-
                2*n*t2^2*t4*t6^2*t9-3*t1*t4*t5*t6^2*t9+n*t1*t4*t5*t6^2*t9-
                t2*t3^2*t5*t7*t9+n*t2*t3^2*t5*t7*t9-2*t2^2*t3*t6*t7*t9+
                4*t1*t3*t5*t6*t7*t9-2*n*t1*t3*t5*t6*t7*t9-t1*t2*t6^2*t7*t9+
                n*t1*t2*t6^2*t7*t9-3*t2^2*t4*t5*t8*t9+n*t2^2*t4*t5*t8*t9+
                3*t1*t4*t5^2*t8*t9-n*t1*t4*t5^2*t8*t9+3*t2^3*t7*t8*t9-
                n*t2^3*t7*t8*t9-3*t1*t2*t5*t7*t8*t9+n*t1*t2*t5*t7*t8*t9+
                2*t2^2*t3*t5*t9^2-n*t2^2*t3*t5*t9^2-2*t1*t3*t5^2*t9^2+
                n*t1*t3*t5^2*t9^2-2*t2^3*t6*t9^2+n*t2^3*t6*t9^2+
                2*t1*t2*t5*t6*t9^2-n*t1*t2*t5*t6*t9^2,
                s7->t10*t3^4*t5-2*t10*t2*t3^3*t6+t1*t10*t3^2*t6^2+
                2*t3^2*t4^2*t6^2-n*t3^2*t4^2*t6^2-4*t3^3*t4*t6*t7+
                2*n*t3^3*t4*t6*t7+2*t3^4*t7^2-n*t3^4*t7^2+t10*t2^2*t3^2*t8-
                2*t1*t10*t3^2*t5*t8+t3^2*t4^2*t5*t8+2*t1*t10*t2*t3*t6*t8-
                6*t2*t3*t4^2*t6*t8+2*n*t2*t3*t4^2*t6*t8-t1^2*t10*t6^2*t8+
                t1*t4^2*t6^2*t8+4*t2*t3^2*t4*t7*t8-2*n*t2*t3^2*t4*t7*t8+
                4*t1*t3*t4*t6*t7*t8-2*n*t1*t3*t4*t6*t7*t8-4*t1*t3^2*t7^2*t8+
                2*n*t1*t3^2*t7^2*t8-t1*t10*t2^2*t8^2+3*t2^2*t4^2*t8^2-
                n*t2^2*t4^2*t8^2+t1^2*t10*t5*t8^2-t1*t4^2*t5*t8^2-
                4*t1*t2*t4*t7*t8^2+2*n*t1*t2*t4*t7*t8^2+2*t1^2*t7^2*t8^2-
                n*t1^2*t7^2*t8^2-2*t3^3*t4*t5*t9+8*t2*t3^2*t4*t6*t9-
                2*n*t2*t3^2*t4*t6*t9-6*t1*t3*t4*t6^2*t9+2*n*t1*t3*t4*t6^2*t9-
                4*t2*t3^3*t7*t9+2*n*t2*t3^3*t7*t9+4*t1*t3^2*t6*t7*t9-
                2*n*t1*t3^2*t6*t7*t9-6*t2^2*t3*t4*t8*t9+2*n*t2^2*t3*t4*t8*t9+
                2*t1*t3*t4*t5*t8*t9+4*t1*t2*t4*t6*t8*t9-2*n*t1*t2*t4*t6*t8*t9+
                4*t1*t2*t3*t7*t8*t9-2*n*t1*t2*t3*t7*t8*t9-4*t1^2*t6*t7*t8*t9+
                2*n*t1^2*t6*t7*t8*t9+2*t2^2*t3^2*t9^2-n*t2^2*t3^2*t9^2+
                t1*t3^2*t5*t9^2-6*t1*t2*t3*t6*t9^2+2*n*t1*t2*t3*t6*t9^2+
                3*t1^2*t6^2*t9^2-n*t1^2*t6^2*t9^2+t1*t2^2*t8*t9^2-t1^2*t5*t8*t9^2,
                s8->t10*t3^3*t5*t6-2*t10*t2*t3^2*t6^2+t1*t10*t3*t6^3+
                2*t3*t4^2*t6^3-n*t3*t4^2*t6^3-4*t3^2*t4*t6^2*t7+
                2*n*t3^2*t4*t6^2*t7+2*t3^3*t6*t7^2-n*t3^3*t6*t7^2-
                t10*t2*t3^2*t5*t8+3*t10*t2^2*t3*t6*t8-t1*t10*t3*t5*t6*t8-
                2*t3*t4^2*t5*t6*t8+n*t3*t4^2*t5*t6*t8-t1*t10*t2*t6^2*t8-
                2*t2*t4^2*t6^2*t8+n*t2*t4^2*t6^2*t8+3*t3^2*t4*t5*t7*t8-
                n*t3^2*t4*t5*t7*t8+2*t2*t3*t4*t6*t7*t8-2*n*t2*t3*t4*t6*t7*t8+
                3*t1*t4*t6^2*t7*t8-n*t1*t4*t6^2*t7*t8-2*t2*t3^2*t7^2*t8+
                n*t2*t3^2*t7^2*t8-2*t1*t3*t6*t7^2*t8+n*t1*t3*t6*t7^2*t8-
                t10*t2^3*t8^2+t1*t10*t2*t5*t8^2+2*t2*t4^2*t5*t8^2-
                n*t2*t4^2*t5*t8^2-t2^2*t4*t7*t8^2+n*t2^2*t4*t7*t8^2-
                3*t1*t4*t5*t7*t8^2+n*t1*t4*t5*t7*t8^2+2*t1*t2*t7^2*t8^2-
                n*t1*t2*t7^2*t8^2+t3^2*t4*t5*t6*t9-n*t3^2*t4*t5*t6*t9+
                2*t2*t3*t4*t6^2*t9-3*t1*t4*t6^3*t9+n*t1*t4*t6^3*t9-
                3*t3^3*t5*t7*t9+n*t3^3*t5*t7*t9+2*t2*t3^2*t6*t7*t9+
                t1*t3*t6^2*t7*t9-n*t1*t3*t6^2*t7*t9-4*t2*t3*t4*t5*t8*t9+
                2*n*t2*t3*t4*t5*t8*t9+t2^2*t4*t6*t8*t9-n*t2^2*t4*t6*t8*t9+
                3*t1*t4*t5*t6*t8*t9-n*t1*t4*t5*t6*t8*t9+t2^2*t3*t7*t8*t9-
                n*t2^2*t3*t7*t8*t9+3*t1*t3*t5*t7*t8*t9-n*t1*t3*t5*t7*t8*t9-
                4*t1*t2*t6*t7*t8*t9+2*n*t1*t2*t6*t7*t8*t9+3*t2*t3^2*t5*t9^2-
                n*t2*t3^2*t5*t9^2-4*t2^2*t3*t6*t9^2+n*t2^2*t3*t6*t9^2-
                2*t1*t3*t5*t6*t9^2+n*t1*t3*t5*t6*t9^2+3*t1*t2*t6^2*t9^2-
                n*t1*t2*t6^2*t9^2+t2^3*t8*t9^2-t1*t2*t5*t8*t9^2,
                s9->t10*t3^2*t5*t6^2-2*t10*t2*t3*t6^3+t1*t10*t6^4+2*t4^2*t6^4-
                n*t4^2*t6^4-4*t3*t4*t6^3*t7+2*n*t3*t4*t6^3*t7+2*t3^2*t6^2*t7^2-
                n*t3^2*t6^2*t7^2-t10*t3^2*t5^2*t8+2*t10*t2*t3*t5*t6*t8+
                t10*t2^2*t6^2*t8-2*t1*t10*t5*t6^2*t8-4*t4^2*t5*t6^2*t8+
                2*n*t4^2*t5*t6^2*t8+4*t3*t4*t5*t6*t7*t8-2*n*t3*t4*t5*t6*t7*t8+
                4*t2*t4*t6^2*t7*t8-2*n*t2*t4*t6^2*t7*t8+t3^2*t5*t7^2*t8-
                6*t2*t3*t6*t7^2*t8+2*n*t2*t3*t6*t7^2*t8+t1*t6^2*t7^2*t8-
                t10*t2^2*t5*t8^2+t1*t10*t5^2*t8^2+2*t4^2*t5^2*t8^2-
                n*t4^2*t5^2*t8^2-4*t2*t4*t5*t7*t8^2+2*n*t2*t4*t5*t7*t8^2+
                3*t2^2*t7^2*t8^2-n*t2^2*t7^2*t8^2-t1*t5*t7^2*t8^2+
                4*t3*t4*t5*t6^2*t9-2*n*t3*t4*t5*t6^2*t9-4*t2*t4*t6^3*t9+
                2*n*t2*t4*t6^3*t9-6*t3^2*t5*t6*t7*t9+2*n*t3^2*t5*t6*t7*t9+
                8*t2*t3*t6^2*t7*t9-2*n*t2*t3*t6^2*t7*t9-2*t1*t6^3*t7*t9-
                4*t3*t4*t5^2*t8*t9+2*n*t3*t4*t5^2*t8*t9+4*t2*t4*t5*t6*t8*t9-
                2*n*t2*t4*t5*t6*t8*t9+4*t2*t3*t5*t7*t8*t9-2*n*t2*t3*t5*t7*t8*t9-
                6*t2^2*t6*t7*t8*t9+2*n*t2^2*t6*t7*t8*t9+2*t1*t5*t6*t7*t8*t9+
                3*t3^2*t5^2*t9^2-n*t3^2*t5^2*t9^2-6*t2*t3*t5*t6*t9^2+
                2*n*t2*t3*t5*t6*t9^2+2*t2^2*t6^2*t9^2-n*t2^2*t6^2*t9^2+
                t1*t5*t6^2*t9^2+t2^2*t5*t8*t9^2-t1*t5^2*t8*t9^2},
                {t1->SP[p1,p1],t2->SP[p1,p2],t3->SP[p1,p3],t4->SP[p1,q],
                t5->SP[p2,p2],t6->SP[p2,p3],t7->SP[p2,q],t8->SP[p3,p3],
                t9->SP[p3,q],t10->SP[q,q],v1->FV[p1,mu],v2->FV[p1,nu],
                v3->FV[p2,mu],v4->FV[p2,nu],v5->FV[p3,mu],v6->FV[p3,nu],
                m1->MT[mu,nu]}};
                scpexp[encli,n]
        ]
}
